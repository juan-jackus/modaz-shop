{"version":3,"sources":["views/components/authPages/Login.jsx","views/components/authPages/ForgotPassword.jsx","views/AuthPages.jsx"],"names":["Login","props","register","loginError","setAuthForm","handleSubmit","loginHandler","isSubmitting","Col","className","lg","sm","md","CardTitle","tag","CardText","Alert","color","isOpen","size","msg","Form","onSubmit","FormGroup","Label","for","Input","type","id","name","placeholder","innerRef","autoFocus","required","to","onClick","CustomInput","label","Button","Ripple","block","disabled","Spinner","ForgotPassword","forgotPwdHandler","AuthPages","useSkin","skin","dispatch","useDispatch","useSelector","state","errors","login","useState","setIsSubmitting","authForm","useForm","illustration","useEffect","setTimeout","data","handleForgotPassword","then","res","successSubmit","toastValue","text","email","toast","ToastContent","transition","Slide","hideProgressBar","autoClose","pauseOnHover","handleLogin","AuthComponent","imgSource","require","default","Row","src","dashboardLogo","alt"],"mappings":"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","file":"static/js/33.ed3d2494.chunk.js","sourcesContent":["// ** React\r\nimport { Link } from 'react-router-dom';\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle';\r\n// ** Styling Components\r\nimport { AlertCircle } from 'react-feather';\r\nimport {\r\n  Col,\r\n  Form,\r\n  Alert,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Spinner,\r\n  CardText,\r\n  FormGroup,\r\n  CardTitle,\r\n  CustomInput,\r\n} from 'reactstrap';\r\n\r\nconst Login = (props) => {\r\n  //\r\n  const {\r\n    register,\r\n    loginError,\r\n    setAuthForm,\r\n    handleSubmit,\r\n    loginHandler,\r\n    isSubmitting,\r\n  } = props;\r\n\r\n  return (\r\n    <Col\r\n      className='d-flex align-items-center auth-bg px-2 p-lg-5'\r\n      lg='4'\r\n      sm='12'\r\n    >\r\n      <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n        <CardTitle tag='h2' className='font-weight-bold mb-1 text-center '>\r\n          Bienvenue ! ðŸ‘‹\r\n        </CardTitle>\r\n        <CardText className='mb-2 text-center'>\r\n          Veuillez vous connecter Ã  votre compte\r\n        </CardText>\r\n        <Alert color='danger' isOpen={!!loginError}>\r\n          <div className='alert-body'>\r\n            <AlertCircle size={15} />\r\n            <span className='ms-1'>{loginError?.msg}</span>\r\n          </div>\r\n        </Alert>\r\n        <Form\r\n          className='auth-login-form mt-2'\r\n          onSubmit={handleSubmit(loginHandler)}\r\n        >\r\n          <FormGroup>\r\n            <Label className='form-label' for='login-email'>\r\n              Email\r\n            </Label>\r\n            <Input\r\n              type='email'\r\n              id='login-email'\r\n              name='email'\r\n              placeholder='Email'\r\n              innerRef={register}\r\n              autoFocus\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <div className='d-flex justify-content-between'>\r\n              <Label className='form-label' for='login-password'>\r\n                Mot de passe\r\n              </Label>\r\n              <Link to='#' onClick={() => setAuthForm('forgotPwd')}>\r\n                <small>Mot de passe oubliÃ© ?</small>\r\n              </Link>\r\n            </div>\r\n            <InputPasswordToggle\r\n              name='password'\r\n              id='login-password'\r\n              placeholder='Mot de passe'\r\n              innerRef={register}\r\n              required\r\n              className='input-group-merge'\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <CustomInput\r\n              type='checkbox'\r\n              name='rememberMe'\r\n              className='custom-control-Primary'\r\n              id='rememberMe'\r\n              label='Rester ConnectÃ©'\r\n              innerRef={register}\r\n            />\r\n          </FormGroup>\r\n          <Button.Ripple\r\n            block\r\n            type='submit'\r\n            color='primary'\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? <Spinner color='white' /> : 'Se connecter'}\r\n          </Button.Ripple>\r\n        </Form>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Link } from 'react-router-dom';\r\n// ** Styling Components\r\nimport { ChevronLeft, AlertCircle } from 'react-feather';\r\nimport {\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Alert,\r\n  Input,\r\n  Button,\r\n  Spinner,\r\n  CardText,\r\n  CardTitle,\r\n  FormGroup,\r\n} from 'reactstrap';\r\nimport '@styles/base/pages/page-auth.scss';\r\n\r\nconst ForgotPassword = (props) => {\r\n  //\r\n  const {\r\n    register,\r\n    loginError,\r\n    setAuthForm,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    forgotPwdHandler,\r\n  } = props;\r\n\r\n  return (\r\n    <Col\r\n      className='d-flex align-items-center auth-bg px-2 p-lg-5'\r\n      lg='4'\r\n      sm='12'\r\n    >\r\n      <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n        <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n          Mot de passe oubliÃ© ? ðŸ”’\r\n        </CardTitle>\r\n        <CardText className='mb-2'>\r\n          Saisissez votre adresse Ã©lectronique et nous vous enverrons les\r\n          instructions pour rÃ©initialiser votre mot de passe.\r\n        </CardText>\r\n        <Alert color='danger' isOpen={!!loginError}>\r\n          <div className='alert-body'>\r\n            <AlertCircle size={15} />\r\n            <span className='ms-1'>{loginError?.msg}</span>\r\n          </div>\r\n        </Alert>\r\n        <Form\r\n          className='auth-forgot-password-form mt-2'\r\n          onSubmit={handleSubmit(forgotPwdHandler)}\r\n        >\r\n          <FormGroup>\r\n            <Label className='form-label' for='forgotPwd-email'>\r\n              Email\r\n            </Label>\r\n            <Input\r\n              required\r\n              autoFocus\r\n              type='email'\r\n              id='forgotPwd-email'\r\n              name='email'\r\n              placeholder='juan@example.com'\r\n              innerRef={register}\r\n            />\r\n          </FormGroup>\r\n          <Button.Ripple\r\n            block\r\n            type='submit'\r\n            color='primary'\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? (\r\n              <Spinner color='white' />\r\n            ) : (\r\n              'Envoyer le lien de rÃ©initialisation'\r\n            )}\r\n          </Button.Ripple>\r\n        </Form>\r\n        {!isSubmitting && (\r\n          <p className='text-center mt-2'>\r\n            <Link to='#' onClick={() => setAuthForm('login')}>\r\n              <ChevronLeft className='mr-25' size={14} />\r\n              <span className='align-middle'>\r\n                Retour Ã  la page de connexion\r\n              </span>\r\n            </Link>\r\n          </p>\r\n        )}\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","// ** React\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// ** Redux Store and Actions\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handleLogin, handleForgotPassword } from '@store/actions/auth';\r\n// ** Form and Validation\r\nimport { useForm } from 'react-hook-form';\r\n// ** Third Party Components\r\nimport { toast, Slide } from 'react-toastify';\r\n// ** Utils\r\nimport { useSkin } from '@hooks/useSkin';\r\n// ** Custom Components\r\nimport ToastContent from './components/users/ToastContent';\r\nimport Login from './components/authPages/Login';\r\nimport ForgotPassword from './components/authPages/ForgotPassword';\r\n// ** Styling Components\r\nimport dashboardLogo from '@src/assets/images/logo/dashboard-logo.png';\r\nimport { Row, Col } from 'reactstrap';\r\nimport '@styles/base/pages/page-auth.scss';\r\n\r\nconst AuthPages = () => {\r\n  const [skin] = useSkin();\r\n  const dispatch = useDispatch();\r\n  const loginError = useSelector((state) => state.errors.login);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [authForm, setAuthForm] = useState('login');\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  let illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg';\r\n  // ** Set server Errors response\r\n  useEffect(() => {\r\n    if (loginError) {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: 'CLEAR_ERRORS',\r\n          data: 'login',\r\n        });\r\n      }, 5000);\r\n    }\r\n  }, [loginError]);\r\n\r\n  const forgotPwdHandler = async (data) => {\r\n    setIsSubmitting(true);\r\n    const successSubmit = await dispatch(handleForgotPassword(data)).then(\r\n      (res) => res\r\n    );\r\n    setIsSubmitting(false);\r\n    if (successSubmit) {\r\n      setAuthForm('login');\r\n      const toastValue = {\r\n        type: 'success',\r\n        text: `Un lien de rÃ©initialisation du mot de passe a Ã©tÃ© envoyÃ© Ã  \"${data.email}\". !`,\r\n      };\r\n      toast[toastValue.type](ToastContent(toastValue), {\r\n        transition: Slide,\r\n        hideProgressBar: false,\r\n        autoClose: 7000,\r\n        pauseOnHover: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const loginHandler = async (data) => {\r\n    setIsSubmitting(true);\r\n    const successSubmit = await dispatch(handleLogin(data)).then((res) => res);\r\n    if (!successSubmit) {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const AuthComponent = (function () {\r\n    if (authForm === 'forgotPwd') {\r\n      illustration =\r\n        skin === 'dark'\r\n          ? 'forgot-password-v2-dark.svg'\r\n          : 'forgot-password-v2.svg';\r\n      return (\r\n        <ForgotPassword\r\n          register={register}\r\n          loginError={loginError}\r\n          setAuthForm={setAuthForm}\r\n          handleSubmit={handleSubmit}\r\n          isSubmitting={isSubmitting}\r\n          forgotPwdHandler={forgotPwdHandler}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Login\r\n        register={register}\r\n        loginError={loginError}\r\n        setAuthForm={setAuthForm}\r\n        handleSubmit={handleSubmit}\r\n        loginHandler={loginHandler}\r\n        isSubmitting={isSubmitting}\r\n      />\r\n    );\r\n  })();\r\n\r\n  const imgSource = require(`@src/assets/images/pages/${illustration}`).default;\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-v2'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo logo1' to='/'>\r\n          <img\r\n            src={dashboardLogo}\r\n            className='img-fluid'\r\n            alt='logo'\r\n            // style={{ height: '5rem' }}\r\n          />\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={imgSource} alt='Login V2' />\r\n          </div>\r\n        </Col>\r\n        {AuthComponent}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPages;\r\n"],"sourceRoot":""}
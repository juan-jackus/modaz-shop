{"version":3,"sources":["assets/images/logo/logo.png","utility/context/ThemeColors.js","redux/reducers/auth/index.js","redux/reducers/blog/index.js","redux/reducers/users/index.js","redux/reducers/orders/index.js","redux/reducers/navbar/index.js","redux/reducers/layout/index.js","redux/reducers/errors/index.js","redux/reducers/products/index.js","redux/reducers/modazImg/index.js","redux/reducers/homepage/index.js","redux/reducers/customers/index.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","@core/components/spinner/Fallback-spinner.js","@core/components/ripple-button/index.js","serviceWorker.js","index.js","configs/themeConfig.js"],"names":["ThemeColors","createContext","ThemeContext","children","useState","colors","setColors","useEffect","window","getHex","color","getComputedStyle","document","body","getPropertyValue","trim","obj","primary","light","concat","main","secondary","success","danger","warning","info","dark","Provider","value","initialState","isLogin","userData","authReducer","state","action","type","user","posts","params","currentPage","totalPages","totalPosts","selectedPost","postToManage","postCategories","Posts","data","totalUsers","selectedUser","userRoles","users","totalOrders","selectedOrder","statusOptions","suggestions","bookmarks","query","navbarReducer","val","objectToUpdate","find","item","id","isBookmarked","bookmarkIndex","findIndex","x","push","splice","isRTL","themeConfig","layout","menuCollapsed","localStorage","getItem","JSON","parse","menu","isCollapsed","initialMenuCollapsed","menuHidden","isHidden","contentWidth","layoutReducer","setItem","errors","addUser","addCustomer","addSlide","addPost","addOrder","addProduct","login","changePwd","network","copieState","products","totalProducts","selectedProduct","productToManage","productCategories","uiState","allSlides","publishedSlides","draftedSlides","selectedSlide","publishedSlidesCount","slidesCount","sectionImg","carouselReducer","stats","orderStatusCount","websiteDate","timeline","postsStats","totalCustomers","customerToManage","selectedCustomer","genders","label","appReducer","combineReducers","auth","blog","orders","navbar","modazImg","homepage","customers","rootReducer","undefined","middleware","thunk","createDebounce","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","SpinnerComponent","className","src","logo","alt","height","Button","Ripple","onClick","rest","mounted","setMounted","isRippling","setIsRippling","y","coords","setCoords","setTimeout","classnames","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","style","Boolean","location","hostname","match","LazyApp","lazy","ReactDOM","render","fallback","newestOnTop","getElementById","navigator","serviceWorker","ready","then","registration","unregister","app","appName","appLogoImage","require","default","skin","routerTransition","backgroundColor","footer","customizer","scrollTop"],"mappings":"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","file":"static/js/main.f4e683ec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a7b1101d.png\";","// ** React Imports\r\nimport { useEffect, useState, createContext } from 'react'\r\n\r\n// ** Create Context\r\nconst ThemeColors = createContext()\r\n\r\nconst ThemeContext = ({ children }) => {\r\n  // ** State\r\n  const [colors, setColors] = useState({})\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (window !== 'undefined') {\r\n      //** Get variable value\r\n      const getHex = color => window.getComputedStyle(document.body).getPropertyValue(color).trim()\r\n\r\n      //** Colors obj\r\n      const obj = {\r\n        primary: {\r\n          light: getHex('--primary').concat('1a'),\r\n          main: getHex('--primary')\r\n        },\r\n        secondary: {\r\n          light: getHex('--secondary').concat('1a'),\r\n          main: getHex('--secondary')\r\n        },\r\n        success: {\r\n          light: getHex('--success').concat('1a'),\r\n          main: getHex('--success')\r\n        },\r\n        danger: {\r\n          light: getHex('--danger').concat('1a'),\r\n          main: getHex('--danger')\r\n        },\r\n        warning: {\r\n          light: getHex('--warning').concat('1a'),\r\n          main: getHex('--warning')\r\n        },\r\n        info: {\r\n          light: getHex('--info').concat('1a'),\r\n          main: getHex('--info')\r\n        },\r\n        dark: {\r\n          light: getHex('--dark').concat('1a'),\r\n          main: getHex('--dark')\r\n        }\r\n      }\r\n\r\n      setColors({ ...obj })\r\n    }\r\n  }, [])\r\n\r\n  return <ThemeColors.Provider value={{ colors }}>{children}</ThemeColors.Provider>\r\n}\r\n\r\nexport { ThemeColors, ThemeContext }\r\n","// **  Initial State\r\nconst initialState = {\r\n  isLogin: false,\r\n  userData: {},\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        isLogin: true,\r\n        userData: action.user,\r\n      };\r\n    case 'LOGOUT':\r\n      return { isLogin: false, userData: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","// ** Initial State\r\nconst initialState = {\r\n  posts: [],\r\n  params: {},\r\n  currentPage: 1,\r\n  totalPages: 1,\r\n  totalPosts: 0,\r\n  selectedPost: null,\r\n  postToManage: null,\r\n  postCategories: [],\r\n};\r\n\r\nconst Posts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_POSTS_DATA':\r\n      return {\r\n        ...state,\r\n        posts: action.data,\r\n        totalPages: action.totalPages,\r\n        totalPosts: action.totalPosts,\r\n        currentPage: action.currentPage,\r\n        params: action.params,\r\n      };\r\n    case 'GET_POST':\r\n      return { ...state, selectedPost: action.selectedPost };\r\n    case 'GET_CATEGORIES':\r\n      if (action.postCategories) {\r\n        return { ...state, postCategories: action.postCategories };\r\n      }\r\n    case 'SET_POST_TO_MANAGE':\r\n      return { ...state, postToManage: action.data };\r\n    case 'REMOVE_SELECTED_POST':\r\n      return { ...state, selectedPost: null };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Posts;\r\n","// ** Initial State\r\nconst initialState = {\r\n  data: [],\r\n  params: {},\r\n  currentPage: 1,\r\n  totalPages: 1,\r\n  totalUsers: 0,\r\n  selectedUser: null,\r\n  userRoles: [],\r\n};\r\n\r\nconst users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_USERS_DATA':\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        totalPages: action.totalPages,\r\n        totalUsers: action.totalUsers,\r\n        currentPage: action.currentPage,\r\n        params: action.params,\r\n      };\r\n    case 'GET_USER':\r\n      return { ...state, selectedUser: action.selectedUser };\r\n    case 'GET_ROLES':\r\n      if (action.userRoles) {\r\n        return { ...state, userRoles: action.userRoles };\r\n      }\r\n    case 'REMOVE_SELECTED_USER':\r\n      return { ...state, selectedUser: null };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default users;\r\n","// ** Initial State\r\nconst initialState = {\r\n  data: [],\r\n  currentPage: 1,\r\n  totalPages: 1,\r\n  totalOrders: 0,\r\n  params: {},\r\n  selectedOrder: null,\r\n  statusOptions: [],\r\n};\r\n\r\nconst users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_ORDERS_DATA':\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        totalPages: action.totalPages,\r\n        currentPage: action.currentPage,\r\n        totalOrders: action.totalOrders,\r\n        params: action.params,\r\n      };\r\n    case 'GET_ORDER':\r\n      return { ...state, selectedOrder: action.selectedOrder };\r\n    case 'GET_STATUSES':\r\n      return { ...state, statusOptions: action.statusOptions };\r\n    case 'REMOVE_SLECTED_ORDER':\r\n      return { ...state, selectedOrder: null };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default users;\r\n","// ** Initial State\r\nconst initialState = {\r\n  suggestions: [],\r\n  bookmarks: [],\r\n  query: ''\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'HANDLE_SEARCH_QUERY':\r\n      return { ...state, query: action.val }\r\n    case 'GET_BOOKMARKS':\r\n      return { ...state, suggestions: action.data, bookmarks: action.bookmarks }\r\n    case 'UPDATE_BOOKMARKED':\r\n      let objectToUpdate\r\n\r\n      // ** find & update object\r\n      state.suggestions.find(item => {\r\n        if (item.id === action.id) {\r\n          item.isBookmarked = !item.isBookmarked\r\n          objectToUpdate = item\r\n        }\r\n      })\r\n\r\n      // ** Get index to add or remove bookmark from array\r\n      const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.id)\r\n\r\n      if (bookmarkIndex === -1) {\r\n        state.bookmarks.push(objectToUpdate)\r\n      } else {\r\n        state.bookmarks.splice(bookmarkIndex, 1)\r\n      }\r\n\r\n      return { ...state }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default navbarReducer\r\n","// ** ThemeConfig Import\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Returns Initial Menu Collapsed State\r\nconst initialMenuCollapsed = () => {\r\n  const item = window.localStorage.getItem('menuCollapsed')\r\n  //** Parse stored json or if none return initialValue\r\n  return item ? JSON.parse(item) : themeConfig.layout.menu.isCollapsed\r\n}\r\n\r\n// ** Initial State\r\nconst initialState = {\r\n  isRTL: themeConfig.layout.isRTL,\r\n  menuCollapsed: initialMenuCollapsed(),\r\n  menuHidden: themeConfig.layout.menu.isHidden,\r\n  contentWidth: themeConfig.layout.contentWidth\r\n}\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'HANDLE_CONTENT_WIDTH':\r\n      return { ...state, contentWidth: action.value }\r\n    case 'HANDLE_MENU_COLLAPSED':\r\n      window.localStorage.setItem('menuCollapsed', action.value)\r\n      return { ...state, menuCollapsed: action.value }\r\n    case 'HANDLE_MENU_HIDDEN':\r\n      return { ...state, menuHidden: action.value }\r\n    case 'HANDLE_RTL':\r\n      return { ...state, isRTL: action.value }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default layoutReducer\r\n","// ** Initial State\r\nconst initialState = {};\r\n\r\nconst errors = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_USER_ERRORS':\r\n      return { ...state, addUser: action.data };\r\n    case 'ADD_CUSTOMER_ERRORS':\r\n      return { ...state, addCustomer: action.data };\r\n    case 'ADD_SLIDE_ERRORS':\r\n      return { ...state, addSlide: action.data };\r\n    case 'ADD_POST_ERRORS':\r\n      return { ...state, addPost: action.data };\r\n    case 'ADD_ORDER_ERRORS':\r\n      return { ...state, addOrder: action.data };\r\n    case 'ADD_PRODUCT_ERRORS':\r\n      return { ...state, addProduct: action.data };\r\n    case 'LOGIN_ERRORS':\r\n      return { ...state, login: action.data };\r\n    case 'UPDATE_PASSWORD_ERRORS':\r\n      return { ...state, changePwd: action.data };\r\n    case 'NETWORK_ERRORS':\r\n      return { ...state, network: action.data };\r\n    case 'CLEAR_ERRORS':\r\n      const copieState = { ...state };\r\n      delete copieState[action.data];\r\n      return { ...copieState };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default errors;\r\n","const initialState = {\r\n  products: [],\r\n  params: {},\r\n  currentPage: 1,\r\n  totalPages: 1,\r\n  totalProducts: 0,\r\n  selectedProduct: null,\r\n  productToManage: null,\r\n  productCategories: [],\r\n  uiState: {},\r\n};\r\n\r\nconst products = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_PRODUCTS_DATA':\r\n      return {\r\n        ...state,\r\n        products: action.data,\r\n        totalPages: action.totalPages,\r\n        currentPage: action.currentPage,\r\n        totalProducts: action.totalProducts,\r\n        params: action.params,\r\n      };\r\n    case 'GET_PRODUCT':\r\n      return { ...state, selectedProduct: action.selectedProduct };\r\n    case 'GET_CATEGORIES':\r\n      if (action.productCategories) {\r\n        return { ...state, productCategories: action.productCategories };\r\n      }\r\n    case 'REMOVE_SELECTED_PRODUCT':\r\n      return { ...state, selectedProduct: null };\r\n    case 'SET_PRODUCT_TO_DELETE':\r\n      return { ...state, productToManage: action.data };\r\n    case 'SET_UI_STATE':\r\n      return { ...state, uiState: { ...state.uiState, ...action.data } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default products;\r\n","// ** Initial State\r\nconst initialState = {\r\n  allSlides: [],\r\n  publishedSlides: [],\r\n  draftedSlides: [],\r\n  selectedSlide: null,\r\n  publishedSlidesCount: 0,\r\n  slidesCount: 0,\r\n  sectionImg: {},\r\n};\r\n\r\nconst carouselReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_ALL_SLIDES':\r\n      return {\r\n        ...state,\r\n        allSlides: action.allSlides,\r\n        publishedSlidesCount: action.publishedSlidesCount,\r\n        draftedSlides: action.draftedSlides,\r\n        publishedSlides: action.publishedSlides,\r\n        slidesCount: action.slidesCount,\r\n      };\r\n    case 'GET_SLIDE':\r\n      return { ...state, selectedSlide: action.selectedSlide };\r\n    case 'REMOVE_SELECTED_SLIDE':\r\n      return { ...state, selectedSlide: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default carouselReducer;\r\n","// ** Initial State\r\nconst initialState = {\r\n  stats: null,\r\n  orderStatusCount: [],\r\n  websiteDate: null,\r\n  timeline: null,\r\n  postsStats: {},\r\n};\r\n\r\nconst users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_HOMEPAGE_DATA':\r\n      return { ...state, ...action.data };\r\n    case 'GET_POSTS_STATS':\r\n      return { ...state, postsStats: action.data };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default users;\r\n","// ** Initial State\r\nconst initialState = {\r\n  data: [],\r\n  params: {},\r\n  currentPage: 1,\r\n  totalPages: 1,\r\n  totalCustomers: 0,\r\n  customerToManage: null,\r\n  selectedCustomer: null,\r\n  genders: [\r\n    { value: 'male', label: 'Male' },\r\n    { value: 'female', label: 'Femelle' },\r\n    { value: 'unspecified', label: 'Non spécifié' },\r\n  ],\r\n};\r\n\r\nconst users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_CUSTOMERS_DATA':\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        totalPages: action.totalPages,\r\n        currentPage: action.currentPage,\r\n        totalCustomers: action.totalCustomers,\r\n        params: action.params,\r\n      };\r\n    case 'GET_CUSTOMER':\r\n      return { ...state, selectedCustomer: action.selectedCustomer };\r\n    case 'SET_CUSTOMER_TO_MANAGE':\r\n      return { ...state, customerToManage: action.data };\r\n    case 'REMOVE_SLECTED_CUSTOMER':\r\n      return { ...state, selectedCustomer: null };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default users;\r\n","// ** Redux Imports\r\nimport { combineReducers } from 'redux';\r\n\r\n// ** Reducers Imports\r\nimport auth from './auth';\r\nimport blog from './blog';\r\nimport users from './users';\r\nimport orders from './orders';\r\nimport navbar from './navbar';\r\nimport layout from './layout';\r\nimport errors from './errors';\r\nimport products from './products';\r\nimport modazImg from './modazImg';\r\nimport homepage from './homepage';\r\nimport customers from './customers';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  blog,\r\n  users,\r\n  orders,\r\n  navbar,\r\n  layout,\r\n  errors,\r\n  products,\r\n  modazImg,\r\n  homepage,\r\n  customers,\r\n});\r\n\r\n// Reset state of redux store on logout\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    return appReducer(undefined, action);\r\n  }\r\n\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","// ** Redux, Thunk & Root Reducer Imports\r\nimport thunk from 'redux-thunk'\r\nimport createDebounce from 'redux-debounced'\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\n\r\n// ** init middleware\r\nconst middleware = [thunk, createDebounce()]\r\n\r\n// ** Dev Tools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n// ** Create store\r\nconst store = createStore(rootReducer, {}, composeEnhancers(applyMiddleware(...middleware)))\r\n\r\nexport { store }\r\n","// ** Logo\r\nimport logo from '@src/assets/images/logo/logo.png';\r\n\r\nconst SpinnerComponent = () => {\r\n  return (\r\n    <div className='fallback-spinner vh-100'>\r\n      <img className='fallback-logo' src={logo} alt='logo' height='33' />\r\n      <div className='loading'>\r\n        <div className='effect-1 effects'></div>\r\n        <div className='effect-2 effects'></div>\r\n        <div className='effect-3 effects'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpinnerComponent;\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport { Button } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\n// ** Styles\r\nimport './ripple-button.scss'\r\n\r\nconst RippleButton = ({ className, children, onClick, ...rest }) => {\r\n  // ** States\r\n  const [mounted, setMounted] = useState(false)\r\n  const [isRippling, setIsRippling] = useState(false)\r\n  const [coords, setCoords] = useState({ x: -1, y: -1 })\r\n\r\n  // ** Toggle mounted on mount & unmount\r\n  useEffect(() => {\r\n    setMounted(true)\r\n    return () => setMounted(false)\r\n  }, [])\r\n\r\n  // ** Check for coords and set ripple\r\n  useEffect(() => {\r\n    if (mounted) {\r\n      if (coords.x !== -1 && coords.y !== -1) {\r\n        setIsRippling(true)\r\n        setTimeout(() => setIsRippling(false), 500)\r\n      } else {\r\n        setIsRippling(false)\r\n      }\r\n    }\r\n  }, [coords])\r\n\r\n  // ** Reset Coords on ripple end\r\n  useEffect(() => {\r\n    if (mounted) {\r\n      if (!isRippling) setCoords({ x: -1, y: -1 })\r\n    }\r\n  }, [isRippling])\r\n\r\n  return (\r\n    <Button\r\n      className={classnames('waves-effect', {\r\n        [className]: className\r\n      })}\r\n      onClick={e => {\r\n        const rect = e.target.getBoundingClientRect()\r\n        setCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top })\r\n        if (onClick) {\r\n          onClick(e)\r\n        }\r\n      }}\r\n      {...rest}\r\n    >\r\n      {children}\r\n      {isRippling ? (\r\n        <span\r\n          className='waves-ripple'\r\n          style={{\r\n            left: coords.x,\r\n            top: coords.y\r\n          }}\r\n        ></span>\r\n      ) : null}\r\n    </Button>\r\n  )\r\n}\r\n\r\n// ** PropTypes\r\nRippleButton.propTypes = {\r\n  ...Button.propTypes\r\n}\r\n\r\nButton.Ripple = RippleButton\r\n","/*eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker === null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","// ** React Imports\r\nimport { Suspense, lazy } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// ** Redux Imports\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/storeConfig/store'\r\n\r\n// ** Toast & ThemeColors Context\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { ThemeContext } from './utility/context/ThemeColors'\r\n\r\n// ** Spinner (Splash Screen)\r\nimport Spinner from './@core/components/spinner/Fallback-spinner'\r\n\r\n// ** Ripple Button\r\nimport './@core/components/ripple-button'\r\n\r\n// ** PrismJS\r\nimport 'prismjs'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\nimport 'prismjs/components/prism-jsx.min'\r\n\r\n// ** React Perfect Scrollbar\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\n\r\n// ** React Toastify\r\nimport '@styles/react/libs/toastify/toastify.scss'\r\n\r\n// ** Core styles\r\nimport './@core/assets/fonts/feather/iconfont.css'\r\nimport './@core/scss/core.scss'\r\nimport './assets/scss/style.scss'\r\n\r\n// ** Service Worker\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// ** Lazy load app\r\nconst LazyApp = lazy(() => import('./App'))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Suspense fallback={<Spinner />}>\r\n      <ThemeContext>\r\n        <LazyApp />\r\n        <ToastContainer newestOnTop />\r\n      </ThemeContext>\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// You can customize the template with the help of this file\r\n\r\n//Template config options\r\nconst themeConfig = {\r\n  app: {\r\n    appName: 'Dashboard',\r\n    appLogoImage: require('@src/assets/images/logo/logo.png').default,\r\n  },\r\n  layout: {\r\n    isRTL: false,\r\n    skin: 'light', // light, dark, bordered, semi-dark\r\n    routerTransition: 'fadeIn', // fadeIn, fadeInLeft, zoomIn, none or check this for more transition https://animate.style/\r\n    type: 'vertical', // vertical, horizontal\r\n    contentWidth: 'full', // full, boxed\r\n    menu: {\r\n      isHidden: false,\r\n      isCollapsed: false,\r\n    },\r\n    navbar: {\r\n      // ? For horizontal menu, navbar type will work for navMenu type\r\n      type: 'floating', // static , sticky , floating, hidden\r\n      backgroundColor: 'white', // BS color options [primary, success, etc]\r\n    },\r\n    footer: {\r\n      type: 'hidden', // static, sticky, hidden\r\n    },\r\n    customizer: false, //Enable wheels image customizer\r\n    scrollTop: true, // Enable scroll to top button\r\n  },\r\n};\r\n\r\nexport default themeConfig;\r\n"],"sourceRoot":""}
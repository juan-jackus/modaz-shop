{"version":3,"sources":["views/components/products/ProductSidebar.jsx","views/components/products/ProductCards.jsx","../node_modules/reactstrap/es/ButtonGroup.js","views/components/products/ProductsHeader.jsx","views/components/products/ProductsSearchbar.jsx","views/components/products/ProductsPagination.jsx","views/components/products/productEdit/ProductModal.jsx","views/Products.jsx","../node_modules/reactstrap/es/Container.js","utility/paginationHandler.js","views/components/users/ToastContent.jsx","@core/components/breadcrumbs/index.js"],"names":["productSidebar","user","gender","setGender","priceRange","categories","sidebarOpen","inCollection","freeShipping","setPriceRange","setRemountKey","setCategories","setCurrentPage","setFreeShipping","setInCollection","productCategories","genderFilterHandler","e","currentTarget","checked","value","priceRangeFilterHandler","categoriesFilterHandler","categoriesArray","includes","push","filter","c","className","classnames","show","Row","Col","sm","Card","CardBody","username","CustomInput","type","id","label","defaultChecked","onChange","map","opt","i","name","pr","cat","toString","Button","Ripple","color","outline","onClick","Date","now","ProductCards","props","dispatch","products","showTrash","getProduct","activeView","setActionType","selectedProducts","setProductToManage","setShowProductModal","productSelectionHandler","product","moreInfos","CardText","Badge","some","p","to","src","images","alt","Array","fill","listItem","index","rating","price","toFixed","toLocaleString","UncontrolledTooltip","placement","target","brand","tag","description","size","Link","propTypes","tagPropType","PropTypes","string","cssModule","object","role","vertical","bool","ButtonGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","ProductsHeader","perPage","setPerPage","setUiState","sortByValue","totalProducts","setSortByValue","setSidebarOpen","getTrashedProducts","selectedSortOption","trash_desc","trash_asc","newest","oldest","price_desc","price_asc","rating_desc","rating_asc","trashBtnColor","length","style","backgroundColor","Label","for","defaultValue","width","padding","backgroundPosition","readOnly","UncontrolledButtonDropdown","DropdownToggle","caret","DropdownMenu","Object","keys","option","DropdownItem","active","ProductsSearchbar","searchTerm","setSearchTerm","InputGroup","Input","placeholder","_","debounce","InputGroupAddon","addonType","InputGroupText","ProductsPage","totalPages","currentPage","useEffect","paginationItems","paginationHandler","handlePageChange","val","window","scrollTo","Pagination","PaginationItem","disabled","PaginationLink","href","preventDefault","truncateStart","numbers","number","truncateEnd","ProductModal","processing","actionType","productToManage","showProductModal","showProductModalData","productDeleteRestoreHandler","actionText","closeModalHandler","Modal","isOpen","modalClassName","toggle","ModalHeader","ModalBody","ModalFooter","Spinner","useDispatch","state","useLocation","useSelector","auth","userData","store","uiState","params","useState","q","page","sortBy","trash","setShowTrash","setSelectedProducts","setProcessing","remountKey","loadingData","setLoadingData","getProductsData","maxHeight","overflow","action","single","deleteProduct","mutiple","deleteMultipleProduct","text","restoreProduct","restoreMultipleProduct","then","res","successDeletion","toastValue","toast","ToastContent","transition","Slide","autoClose","pauseOnHover","breadCrumbTitle","breadCrumbActive","Container","prevState","updatedSelectedProducts","ProductsPagination","fluid","oneOfType","containerClass","module","exports","totalPage","pageToShow","halfOfPageToShow","Math","trunc","pagination","showValueToDelete","icon","BreadCrumbs","breadCrumbParent","breadCrumbParent2","breadCrumbParent3"],"mappings":"oTAmNeA,EA7MQ,SAAC,GAgBjB,IAfLC,EAeI,EAfJA,KACAC,EAcI,EAdJA,OACAC,EAaI,EAbJA,UACAC,EAYI,EAZJA,WACAC,EAWI,EAXJA,WACAC,EAUI,EAVJA,YACAC,EASI,EATJA,aACAC,EAQI,EARJA,aACAC,EAOI,EAPJA,cACAC,EAMI,EANJA,cACAC,EAKI,EALJA,cACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,kBAmBMC,EAAsB,SAACC,GACvBA,EAAEC,cAAcC,UAClBhB,EAAUc,EAAEC,cAAcE,OAC1BR,EAAe,GAElB,EAGKS,EAA0B,SAACJ,GAC3BA,EAAEC,cAAcC,UAClBV,EAAcQ,EAAEC,cAAcE,OAC9BR,EAAe,GAElB,EAeKU,EAA0B,SAACL,GAC/B,IAAIM,EAAkBlB,EAChBe,EAAQH,EAAEC,cAAcE,MACdH,EAAEC,cAAcC,UAChBI,EAAgBC,SAASJ,GACvCG,EAAgBE,KAAKL,GAGrBG,EAAkBA,EAAgBG,QAAO,SAACC,GAAD,OAAOA,GAAKP,CAAZ,IAE3CT,EAAc,YAAIY,IAClBX,EAAe,EAChB,EAUD,OACE,qBAAKgB,UAAU,gCAAf,SACE,qBAAKA,UAAU,UAAf,SACE,sBACEA,UAAWC,IAAW,eAAgB,CACpCC,KAAMxB,IAFV,UAKE,cAACyB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,oBAAIL,UAAU,mCAAd,yBAGJ,cAACM,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WAEqB,gBAAlBlC,EAAKmC,UACJ,sBAAKR,UAAU,cAAf,UACE,oBAAIA,UAAU,yBAAd,2BACA,cAACS,EAAA,EAAD,CACEC,KAAK,WACLC,GAAG,sBACHC,MAAM,GACNC,eAAgBlC,EAChBmC,SA1DgB,SAACzB,GACjCH,EAAgBG,EAAEC,cAAcC,SAChCP,EAAe,EAChB,OA4DW,gCACE,oBAAIgB,UAAU,oBAAd,mBACA,oBAAIA,UAAU,uBAAd,SAjGQ,CACpB,CAAER,MAAO,GAAIoB,MAAO,QACpB,CAAEpB,MAAO,MAAOoB,MAAO,SACvB,CAAEpB,MAAO,QAASoB,MAAO,UA+FIG,KAAI,SAACC,EAAKC,GACvB,OACE,6BACE,cAACR,EAAA,EAAD,CACET,UAAU,OACVU,KAAK,QACLC,GAAE,gBAAWM,GACbC,KAAK,eACL1B,MAAOwB,EAAIxB,MACXoB,MAAOI,EAAIJ,MACXC,eAAgBvC,IAAW0C,EAAIxB,MAC/BsB,SAAU1B,KATL4B,EAAIxB,MAahB,SAIL,sBAAKQ,UAAU,cAAf,UACE,oBAAIA,UAAU,yBAAd,gCACA,cAACS,EAAA,EAAD,CACEC,KAAK,WACLC,GAAG,sBACHC,MAAM,GACNC,eAAgBjC,EAChBkC,SAtFkB,SAACzB,GACjCJ,EAAgBI,EAAEC,cAAcC,SAChCP,EAAe,EAChB,OAuFW,gCACE,oBAAIgB,UAAU,oBAAd,gCACA,oBAAIA,UAAU,4BAAd,SA5HY,CACxB,CAAER,MAAO,GAAIoB,MAAO,QACpB,CAAEpB,MAAO,OAAQoB,MAAO,gBACxB,CAAEpB,MAAO,SAAUoB,MAAO,cAC1B,CAAEpB,MAAO,UAAWoB,MAAO,eAC3B,CAAEpB,MAAO,WAAYoB,MAAO,gBAC5B,CAAEpB,MAAO,OAAQoB,MAAO,uBAuHSG,KAAI,SAACI,EAAIF,GAC1B,OACE,6BACE,cAACR,EAAA,EAAD,CACEC,KAAK,QACLC,GAAE,qBAAgBM,GAClBC,KAAK,oBACL1B,MAAO2B,EAAG3B,MACVoB,MAAOO,EAAGP,MACVC,eAAgBrC,IAAe2C,EAAG3B,MAClCsB,SAAUrB,KARL0B,EAAG3B,MAYf,SAIL,gCACE,oBAAIQ,UAAU,oBAAd,2BACA,oBAAIA,UAAU,2BAAd,SACGb,EAAkB4B,KAAI,SAACK,EAAKH,GAC3B,OACE,6BACE,cAACR,EAAA,EAAD,CACEC,KAAK,WACLC,GAAE,2BAAsBM,GACxBzB,MAAO4B,EAAI5B,MACXoB,MAAOQ,EAAIR,MACXC,eAAgBpC,EAAWmB,SACzBwB,EAAI5B,MAAM6B,YAEZP,SAAUpB,KATL0B,EAAI5B,MAahB,SAIL,cAAC8B,EAAA,EAAOC,OAAR,CACEvB,UAAU,aACVwB,MAAM,UACNC,SAAO,EACPC,QArHa,WACzBzC,GAAgB,GAChBJ,EAAc,IACdE,EAAc,IACdC,EAAe,GACfF,EAAc6C,KAAKC,MACpB,EA2GW,4CAcb,E,iFCPcC,EA1LM,SAACC,GAEpB,IACEC,EAUED,EAVFC,SACAC,EASEF,EATFE,SACAC,EAQEH,EARFG,UACAC,EAOEJ,EAPFI,WACAC,EAMEL,EANFK,WACAC,EAKEN,EALFM,cACAC,EAIEP,EAJFO,iBACAC,EAGER,EAHFQ,mBACAC,EAEET,EAFFS,oBACAC,EACEV,EADFU,wBAGF,OACE,qBACE7B,GAAG,gBACHX,UAAWC,IAAW,CACpB,YAA4B,SAAfkC,EACb,YAA4B,SAAfA,IAJjB,SAQGH,EAASjB,KAAI,SAAC0B,EAASxB,GAAO,IAAD,MAC5B,OACE,eAACX,EAAA,EAAD,CAAMN,UAAU,iBAAhB,UACE,sBAAKA,UAAU,+BAAf,UAEG,UAAAyC,EAAQC,iBAAR,SAAmB9D,aAClB,cAAC+D,EAAA,EAAD,CACE3C,UAAWC,IAAW,gBAAiB,CACrC,SAAyB,SAAfkC,IAFd,SAKE,cAACS,EAAA,EAAD,CAAOpB,MAAM,gBAAb,kCAEA,KAEJ,qBAAKxB,UAAU,mBAAf,SACE,cAACS,EAAA,EAAD,CACEC,KAAK,WACLC,GAAE,0BAAqBM,GACvBL,MAAM,GACNrB,QAAS8C,EAAiBQ,MAAK,SAACC,GAAD,OAAOA,EAAEnC,KAAO8B,EAAQ9B,EAAxB,IAC/BG,SAAU,SAACzB,GAAD,OACRmD,EAAwBnD,EAAEC,cAAcC,QAASkD,EADzC,MAMd,cAAC,IAAD,CACEM,GAAE,yBAAoBN,EAAQ9B,IAC9Be,QAAS,kBAAMK,EAASG,EAAWO,EAAQ9B,GAAI8B,GAAtC,EAFX,SAIE,qBACEzC,UAAU,gDACVgD,IAAKP,EAAQQ,OAAO,GACpBC,IAAKT,EAAQvB,YAInB,eAACX,EAAA,EAAD,WACE,sBAAKP,UAAU,eAAf,UAEE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,4BAAd,SACG,IAAImD,MAAM,GAAGC,OAAOrC,KAAI,SAACsC,EAAUC,GAAW,IAAD,IAC5C,OACE,oBAAgBtD,UAAU,0BAA1B,SACE,cAAC,IAAD,CACEA,UAAWC,IAAW,CACpB,cACEqD,EAAQ,IAAR,UAAab,EAAQC,iBAArB,aAAa,EAAmBa,QAClC,gBACED,EAAQ,GAAR,UAAYb,EAAQC,iBAApB,aAAY,EAAmBa,aAN9BD,EAWZ,QAIL,qBAAKtD,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,sBACSyC,EAAQe,MAAMC,QAAQ,IAAIC,yBAKvC,qBAAI1D,UAAU,YAAd,UACE,cAAC,IAAD,CACEW,GAAE,sBAAiBM,GACnBjB,UAAU,YACV+C,GAAE,yBAAoBN,EAAQ9B,IAC9Be,QAAS,kBAAMK,EAASG,EAAWO,EAAQ9B,GAAI8B,GAAtC,EAJX,SAMGA,EAAQvB,OAEX,cAACyC,EAAA,EAAD,CACEC,UAAU,MACVC,OAAM,sBAAiB5C,GAFzB,SAIGwB,EAAQvB,QAEH,OAAPuB,QAAO,IAAPA,GAAA,UAAAA,EAASC,iBAAT,eAAoBoB,QACnB,eAACnB,EAAA,EAAD,CAAUoB,IAAI,OAAO/D,UAAU,4BAA/B,gBACM,IACJ,sBAAMA,UAAU,eAAhB,SACGyC,EAAQC,UAAUoB,cAM3B,cAACnB,EAAA,EAAD,CAAU3C,UAAU,mBAApB,SACGyC,EAAQuB,iBAGb,sBAAKhE,UAAU,2BAAf,UAEE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,oBAAgCyC,EAAQe,SAChC,OAAPf,QAAO,IAAPA,GAAA,UAAAA,EAASC,iBAAT,SAAoB9D,aACnB,cAAC+D,EAAA,EAAD,CAAU3C,UAAU,WAApB,SACE,cAAC4C,EAAA,EAAD,CAAOpB,MAAM,gBAAb,6BAEA,UAGPS,EAEC,cAACX,EAAA,EAAD,CACEE,MAAM,UACNxB,UAAU,uBACV0B,QAAS,WACPK,EAASO,EAAmBG,IAC5BL,EAAc,WACdG,GAAoB,EACrB,EAPH,SASE,uBAAMvC,UAAU,cAAhB,UACE,cAAC,IAAD,CAAWA,UAAU,QAAQiE,KAAM,KADrC,iBAOF,cAAC3C,EAAA,EAAD,CACEE,MAAM,UACNuC,IAAKG,IACLlE,UAAU,oBACV+C,GAAE,yBAAoBN,EAAQ9B,IAC9Be,QAAS,kBAAMK,EAASG,EAAWO,EAAQ9B,GAAI8B,GAAtC,EALX,SAOE,uBAAMzC,UAAU,cAAhB,UACE,cAAC,IAAD,CAAKA,UAAU,QAAQiE,KAAM,KAD/B,YAOJ,cAAC3C,EAAA,EAAD,CACEE,MAAM,YACNxB,UAAU,sBACV0B,QAAS,WACPK,EAASO,EAAmBG,IAC5BL,EAAc,UACdG,GAAoB,EACrB,EAPH,SASE,uBAAMvC,UAAU,cAAhB,UACE,cAAC,IAAD,CAAQA,UAAU,QAAQiE,KAAM,KADlC,sBAnJgCxB,EAAQvB,KA2JjD,KAGN,E,2HClMGiD,EAAY,CACdJ,IAAKK,IACL,aAAcC,IAAUC,OACxBtE,UAAWqE,IAAUC,OACrBC,UAAWF,IAAUG,OACrBC,KAAMJ,IAAUC,OAChBL,KAAMI,IAAUC,OAChBI,SAAUL,IAAUM,MAOlBC,EAAc,SAAqB9C,GACrC,IAAI9B,EAAY8B,EAAM9B,UAClBuE,EAAYzC,EAAMyC,UAClBN,EAAOnC,EAAMmC,KACbS,EAAW5C,EAAM4C,SACjBG,EAAM/C,EAAMiC,IACZe,EAAaC,YAA8BjD,EAAO,CAAC,YAAa,YAAa,OAAQ,WAAY,QAEjGkD,EAAUC,YAAgBC,IAAWlF,IAAWiE,GAAO,aAAeA,EAAcS,EAAW,qBAAuB,aAAcH,GACxI,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,CAAC,EAAGP,EAAY,CACpE9E,UAAWgF,IAEd,EAEDJ,EAAYT,UAAYA,EACxBS,EAAYU,aApBO,CACjBvB,IAAK,MACLU,KAAM,SAmBOG,QCwLAW,EAzMQ,SAACzD,GAEtB,IACE0D,EAeE1D,EAfF0D,QACAzD,EAcED,EAdFC,SACAE,EAaEH,EAbFG,UACAE,EAYEL,EAZFK,WACAsD,EAWE3D,EAXF2D,WACAC,EAUE5D,EAVF4D,WACAC,EASE7D,EATF6D,YACAvD,EAQEN,EARFM,cACAwD,EAOE9D,EAPF8D,cACA5G,EAME8C,EANF9C,eACA6G,EAKE/D,EALF+D,eACAC,EAIEhE,EAJFgE,eACAzD,EAGEP,EAHFO,iBACA0D,EAEEjE,EAFFiE,mBACAxD,EACET,EADFS,oBAgBIyD,EAAqB/D,EAJA,CACzBgE,WAAY,2BACZC,UAAW,2BAVS,CACpBC,OAAQ,kBACRC,OAAQ,eACRC,WAAY,mBACZC,UAAW,iBACXC,YAAa,mBACbC,WAAY,kBAORC,EAAgBxE,EAAY,UAAY,UAkB9C,OACE,eAAC9B,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,KAAKL,UAAU,4BAAvB,UAEE,wBACEA,UAAU,kCACV0B,QAAS,kBAAMoE,GAAe,EAArB,EAFX,SAIE,uBAAM9F,UAAU,8BAAhB,UACE,cAAC,IAAD,IADF,eAKF,qBAAKA,UAAU,gBAAf,SACGqC,EAAiBqE,OAChB,qCAEE,cAACpF,EAAA,EAAOC,OAAR,CACEC,MAAM,SACNxB,UAAU,OACV0B,QAAS,WACPU,EAAc,UACdG,GAAoB,EACrB,EANH,uBAWCN,GACC,cAACX,EAAA,EAAOC,OAAR,CACEC,MAAM,UACNE,QAAS,WACPU,EAAc,WACdG,GAAoB,EACrB,EALH,2BAaHN,GACC,cAACX,EAAA,EAAOC,OAAR,CACEvB,UAAU,OACVwB,MAAM,UACNuC,IAAKG,IACLnB,GAAG,gBAJL,kCAYN,qBAAK/C,UAAU,WAAf,SACE,eAACsB,EAAA,EAAOC,OAAR,CACEC,MAAM,SACNC,SAAO,EACPkF,MAAO,CAAEC,gBAAiBH,GAC1B/E,QAAS,kBAAMqE,GAAN,EAJX,UAME,cAAC,IAAD,CAAQ/F,UAAU,QAAQiE,KAAM,KANlC,oBAWJ,cAAC7D,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,sBAAKL,UAAU,yBAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,cAAC6G,EAAA,EAAD,CAAOC,IAAI,oBAAX,sBACA,eAACrG,EAAA,EAAD,CACET,UAAU,qBACVU,KAAK,SACLC,GAAG,oBACHoG,aAAcvB,EACd1E,SAAU,SAACzB,GACToG,EAAWpG,EAAEwE,OAAOrE,OACpBR,EAAe,EAChB,EACD2H,MAAO,CACLK,MAAO,OACPC,QAAS,WACTC,mBACE,yDAbN,UAgBE,wBAAQ1H,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,cAACqH,EAAA,EAAD,CAAOC,IAAI,gBAAgB9G,UAAU,OAArC,2BAGA,cAACS,EAAA,EAAD,CACET,UAAU,gCACVU,KAAK,OACLC,GAAG,gBACHnB,MAAOoG,EACPuB,UAAQ,EACRR,MAAO,CAAEK,MAAO,OAAQC,QAAS,eAGrC,sBAAKjH,UAAU,2BAAf,UACE,eAACoH,EAAA,EAAD,CAA4BpH,UAAU,gBAAtC,UACE,eAACqH,EAAA,EAAD,CACErH,UAAU,uBACVwB,MAAM,UACNC,SAAO,EACP6F,OAAK,EAJP,UAME,sBAAMtH,UAAU,SAAhB,0BACCgG,EAAmBL,MAEtB,cAAC4B,EAAA,EAAD,UAhIHC,OAAOC,KAAKzB,GAAoBjF,KAAI,SAAC2G,EAAQzG,GAClD,OAAIyG,IAAW/B,EAAoB,KAEjC,cAACgC,EAAA,EAAD,CAEE3H,UAAU,QACV0B,QAAS,kBAAMmE,EAAe6B,EAArB,EAHX,SAKG1B,EAAmB0B,IAJfzG,EAOV,SAuHO,eAAC,EAAD,CAAajB,UAAU,mBAAvB,UAEE,cAACsB,EAAA,EAAD,CACEyC,IAAI,QACJ/D,UAAWC,IAAW,kCAAmC,CACvD2H,OAAuB,SAAfzF,IAEVX,MAAM,UACNC,SAAO,EACPC,QAAS,kBAAMK,EAAS2D,EAAW,CAAEvD,WAAY,SAAxC,EAPX,SASE,cAAC,IAAD,CAAM8B,KAAM,OAGd,cAAC3C,EAAA,EAAD,CACEyC,IAAI,QACJ/D,UAAWC,IAAW,kCAAmC,CACvD2H,OAAuB,SAAfzF,IAEVX,MAAM,UACNC,SAAO,EACPC,QAAS,kBAAMK,EAAS2D,EAAW,CAAEvD,WAAY,SAAxC,EAPX,SASE,cAAC,IAAD,CAAM8B,KAAM,oBAQ3B,E,gDCjLc4D,GA9BW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,cAAe/I,EAAqB,EAArBA,eAOtD,OACE,qBAAKgB,UAAU,sBAAf,SACE,cAACG,EAAA,EAAD,CAAKH,UAAU,OAAf,SACE,cAACI,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAAC2H,GAAA,EAAD,CAAYhI,UAAU,oBAAtB,UACE,cAACiI,GAAA,EAAD,CACEjI,UAAU,iBACVkI,YAAY,wBACZnB,aAAce,EACdhH,SAAUqH,EAAEC,UAdH,SAAC/I,GACpB0I,EAAc1I,EAAEwE,OAAOrE,OACvBR,EAAe,EAChB,GAW8C,OAErC,cAACqJ,GAAA,EAAD,CAAiBC,UAAU,SAA3B,SACE,cAACC,GAAA,EAAD,UACE,cAAC,IAAD,CAAQvI,UAAU,aAAaiE,KAAM,iBAQpD,E,sDC4EcuE,GA5GM,SAAC,GAKf,IAJLxG,EAII,EAJJA,SACAyG,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACA1J,EACI,EADJA,eAEA2J,qBAAU,WACJ3G,EAAS0E,QAAU,GAAG1H,EAAe,EAC1C,GAAE,CAACgD,EAAS0E,SACb,IACMkC,EAAkBC,KACtBJ,EACAC,EAHiB,GAObI,EAAmB,SAACC,GACxB,GAAY,SAARA,EAAgB,CAClB,GAAIL,IAAgBD,EAAY,OAChCzJ,EAAe0J,EAAc,EAC9B,MAAM,GAAY,SAARK,EAAgB,CACzB,GAAoB,IAAhBL,EAAmB,OACvB1J,EAAe0J,EAAc,EAC9B,KAAM,CACL,GAAIA,IAAgBK,EAAK,OACzB/J,EAAe+J,EAChB,CACDC,OAAOC,SAAS,EAAG,EACpB,EAmBD,OACE,eAACC,GAAA,EAAD,CAAYlJ,UAAU,gCAAtB,UAEE,cAACmJ,GAAA,EAAD,CACEC,SAA0B,IAAhBV,EACV1I,UAAU,YACV0B,QAAS,kBAAMoH,EAAiB,OAAvB,EAHX,SAKE,cAACO,GAAA,EAAD,CACEC,KAAK,IACL5H,QAAS,SAACrC,GAAD,OAAOA,EAAEkK,gBAAT,MAIZX,EAAgBY,eACf,cAACL,GAAA,EAAD,CAEEvB,OAAwB,IAAhBc,EACRhH,QAAS,kBAAMoH,EAAiB,EAAvB,EAHX,SAKE,cAACO,GAAA,EAAD,CAAgBC,KAAK,IAAI5H,QAAS,SAACrC,GAAD,OAAOA,EAAEkK,gBAAT,EAAlC,gBAJK,GASRX,EAAgBY,eAAiBZ,EAAgBa,QAAQ,GAAK,GAC7D,qBAAKzJ,UAAU,2BAAf,iBAzCG4I,EAAgBa,QAAQ1I,KAAI,SAAC2I,EAAQpG,GAC1C,OACE,cAAC6F,GAAA,EAAD,CAEEvB,OAAQc,IAAgBgB,EACxBhI,QAAS,kBAAMoH,EAAiBY,EAAvB,EAHX,SAKE,cAACL,GAAA,EAAD,CAAgBC,KAAK,IAAI5H,QAAS,SAACrC,GAAD,OAAOA,EAAEkK,gBAAT,EAAlC,SACGG,KALEA,EASV,IAkCEd,EAAgBe,aACflB,EACEG,EAAgBa,QAAQb,EAAgBa,QAAQ/C,OAAS,GACzD,GAAK,qBAAK1G,UAAU,2BAAf,iBACR4I,EAAgBe,aACf,cAACR,GAAA,EAAD,CAEEvB,OAAQc,IAAgBD,EACxB/G,QAAS,kBAAMoH,EAAiBL,EAAvB,EAHX,SAKE,cAACY,GAAA,EAAD,CAAgBC,KAAK,IAAI5H,QAAS,SAACrC,GAAD,OAAOA,EAAEkK,gBAAT,EAAlC,SACGd,KALEA,GAUT,cAACU,GAAA,EAAD,CACEnJ,UAAU,YACVoJ,SAAUV,IAAgBD,EAC1B/G,QAAS,kBAAMoH,EAAiB,OAAvB,EAHX,SAKE,cAACO,GAAA,EAAD,CACEC,KAAK,IACL5H,QAAS,SAACrC,GAAD,OAAOA,EAAEkK,gBAAT,QAKlB,E,kDCnCcK,GApEM,SAAC9H,GAEpB,IACEC,EAUED,EAVFC,SACA8H,EASE/H,EATF+H,WACAC,EAQEhI,EARFgI,WACAC,EAOEjI,EAPFiI,gBACA1H,EAMEP,EANFO,iBACA2H,EAKElI,EALFkI,iBACA1H,EAIER,EAJFQ,mBACAC,EAGET,EAHFS,oBACA0H,EAEEnI,EAFFmI,qBACAC,EACEpI,EADFoI,4BAEIC,EAA4B,YAAfL,EAA2B,eAAiB,cACzDnD,EAAuB,YAAfmD,EAA2B,UAAY,SAE/CM,EAAoB,WACpBL,GACFhI,EAASO,EAAmB,OAE9BC,GAAqByH,EACtB,EAED,OACE,eAACK,GAAA,EAAD,CACEC,OAAQN,EACRO,eAAc,gBAAW5D,GACzB6D,OAAQJ,EAHV,UAKE,cAACK,GAAA,EAAD,CAAaD,OAAQJ,IACrB,eAACM,GAAA,EAAD,WACE,oBAAG1K,UAAS,eAAU2G,EAAV,qBAAZ,0BACgBwD,GACZJ,GAAmB1H,EAAiBqE,OAAS,GAC7C,wCAAWrE,EAAiBqE,OAA5B,eACC,IAJL,OAOCuD,OAEH,eAACU,GAAA,EAAD,WACE,cAACrJ,EAAA,EAAD,CACEE,MAAOmF,EACPyC,SAAUS,EACVnI,QAAS,kBAAMwI,GAAN,EAHX,SAKGL,EACC,qCACE,cAACe,GAAA,EAAD,CAAS3G,KAAK,KAAKzC,MAAM,UACzB,sBAAMxB,UAAU,QAAhB,8BAGF,cAGJ,cAACsB,EAAA,EAAD,CACEE,MAAM,YACN4H,SAAUS,EACVnI,QAAS0I,EAHX,0BAUP,E,iBC0Qc5B,UAtTM,WAEnB,IAAMzG,EAAW8I,cACTC,EAAUC,cAAVD,MACFzM,EAAO2M,aAAY,SAACF,GAAD,OAAWA,EAAMG,KAAKC,QAAtB,IACnBC,EAAQH,aAAY,SAACF,GAAD,OAAWA,EAAM9I,QAAjB,IAC1B,EAAgCmJ,EAAMC,QAA9BjJ,kBAAR,MAAqB,OAArB,EAEEkJ,EAMEF,EANFE,OACArJ,EAKEmJ,EALFnJ,SACAyG,EAIE0C,EAJF1C,WACA7C,EAGEuF,EAHFvF,cACAmE,EAEEoB,EAFFpB,gBACA5K,EACEgM,EADFhM,kBAIF,EAAoCmM,mBAASD,EAAOE,GAAK,IAAzD,mBAAOzD,EAAP,KAAmBC,EAAnB,OACkCuD,mBAASD,EAAOG,MAAQ,GAD1D,mBACG9C,EADH,KACgB1J,EADhB,OAE0BsM,mBAASD,EAAO7F,SAAW,GAFrD,mBAEGA,EAFH,KAEYC,EAFZ,OAGkC6F,mBAASD,EAAOI,QAAU,UAH5D,mBAGG9F,EAHH,KAGgBE,EAHhB,OAIwByF,mBAASD,EAAO/M,QAAU,IAJlD,mBAIGA,EAJH,KAIWC,EAJX,OAKgC+M,mBAASD,EAAO5M,YAAc,IAL9D,mBAKGA,EALH,KAKeM,EALf,OAMgCuM,mBAASD,EAAO7M,YAAc,IAN9D,oBAMGA,GANH,MAMeK,GANf,SAOoCyM,mBAASD,EAAO1M,eAAgB,GAPpE,qBAOGA,GAPH,MAOiBO,GAPjB,SAQoCoM,mBAASD,EAAOzM,eAAgB,GARpE,qBAQGA,GARH,MAQiBK,GARjB,SAS8BqM,mBAASD,EAAOK,QAAS,GATvD,qBASGzJ,GATH,MASc0J,GATd,SAU4CL,mBAAS,IAVrD,qBAUGjJ,GAVH,MAUqBuJ,GAVrB,SAWkCN,oBAAS,GAX3C,qBAWG5M,GAXH,MAWgBoH,GAXhB,SAY4CwF,qBAAWvB,GAZvD,qBAYGC,GAZH,MAYqBzH,GAZrB,SAagC+I,oBAAc,OAALR,QAAK,IAALA,OAAA,EAAAA,EAAOhB,aAAc,MAb9D,qBAaGA,GAbH,MAae1H,GAbf,SAcgCkJ,oBAAS,GAdzC,qBAcGzB,GAdH,MAcegC,GAdf,SAegCP,mBAAS,GAfzC,qBAeGQ,GAfH,MAeehN,GAff,SAgBkCwM,oBAAS,GAhB3C,qBAgBGS,GAhBH,MAgBgBC,GAhBhB,MAmBArD,oBAAS,gCAAC,+FACRqD,IAAe,GADP,SAEFjK,EACJkK,YAAgB,CACdV,EAAGzD,EACH0D,KAAM9C,EACNlD,UACAiG,OAAQ9F,EACRrH,SACAG,aACAD,cACAG,gBACAC,gBACA8M,MAAOzJ,MAbH,OAgBR+J,IAAe,GAhBP,2CAiBP,CACDlE,EACAY,EACAlD,EACAG,EACArH,EACAG,EACAD,GACAG,GACAC,GACAqD,KAIF,IA0BM8D,GAAkB,iDAAG,gGAEnB0F,GADAC,GAASzJ,IACQ,aAAe,SACtCjD,EAAe,GACf2M,GAAaD,GACb7F,EAAe4F,GACfG,GAAoB,IACpBD,IAAc1J,IAPW,2CAAH,qDAUlBgI,GAAuB,WAC3B,OAAIF,EAEA,6BACE,6BAAKA,EAAgB7I,SAGhBmB,GAAiBqE,OAExB,oBAAIC,MAAO,CAAEuF,UAAW,QAASC,SAAU,QAA3C,SACG9J,GAAiBtB,KAAI,SAAC+B,EAAG7B,GAAJ,OACpB,6BAAa6B,EAAE5B,MAAND,EADW,WAHrB,CASR,EAEKiJ,GAA2B,iDAAG,uGAClC2B,IAAc,GAERO,EAAS,CACbC,OAAQC,IACRC,QAASC,IACTC,KAAM,eAGU,WAAd3C,KACFsC,EAAOC,OAASK,IAChBN,EAAOG,QAAUI,IACjBP,EAAOK,KAAO,iBAEZ1C,EAd8B,iCAeFhI,EAC5BqK,EAAOC,OAAOtC,EAAiB9H,KAC/B2K,MAAK,SAACC,GAAD,OAASA,CAAT,IAjByB,OAe1BC,EAf0B,OAkBhCC,EAAaD,EACT,CACEpM,KAAM,UACN+L,KAAK,+BAAD,OAA8B1C,EAAgB7I,OAEpD,CACER,KAAM,QACN+L,KAAK,gCAAD,OAAkC1C,EAAgB7I,OAzB5B,4BA2BvBmB,GAAiBqE,OA3BM,kCA6BF3E,EAC5BqK,EAAOG,QAAQlK,GAAkBJ,KACjC2K,MAAK,SAACC,GAAD,OAASA,CAAT,IA/ByB,QA6B1BC,EA7B0B,OAiChCC,EACED,IAAoBzK,GAAiBqE,OACjC,CACEhG,KAAM,UACN+L,KAAK,GAAD,OAAKL,EAAOK,KAAZ,uBAA+BpK,GAAiBqE,OAAhD,gBAEN,CACEhG,KAAM,QACN+L,KAAK,eAAD,OAAiBL,EAAOK,KAAxB,YACFpK,GAAiBqE,OAASoG,EADxB,gBAzCoB,QA8ClCjB,IAAc,GACdtJ,IAAqByH,IACrBjI,EAASO,YAAmB,OACJ,YAApByK,EAAWrM,MAAuBqJ,GACpC6B,GAAoB,IAEtBoB,IAAMD,EAAWrM,MAAMuM,YAAaF,EAAY9C,IAAuB,CACrEiD,WAAYC,IACZC,UAAW,IACXC,cAAc,IAvDkB,4CAAH,qDA4DjC,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEC,gBAAgB,qBAChBC,iBAAiB,aAEnB,eAACC,GAAA,EAAD,WACE,qBAAKxN,UAAU,iCAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACE+B,SAAUA,EACVyD,QAASA,EACTvD,UAAWA,GACXwD,WAAYA,EACZE,YAAaA,EACbxD,WAAYA,EACZuD,WAAYA,IACZtD,cAAeA,GACfwD,cAAeA,EACf5G,eAAgBA,EAChB6G,eAAgBA,EAChBC,eAAgBA,GAChBzD,iBAAkBA,GAClB0D,mBAAoBA,GACpBxD,oBAAqBA,KAEvB,qBACEvC,UAAWC,IAAW,uBAAwB,CAC5CC,KAAMxB,KAERgD,QAAS,kBAAMoE,IAAe,EAArB,IAEX,cAAC,GAAD,CACEgC,WAAYA,EACZC,cAAeA,EACf/I,eAAgBA,IAGjB+M,IACC,qBAAK/L,UAAU,sCAAf,SACE,cAAC4K,GAAA,EAAD,CAASjK,GAAG,qBAGhB,sBAAKX,UAAWC,IAAW,CAAE,SAAU8L,KAAvC,UAEE,qBAAK/L,UAAU,OAAf,SACE,cAACS,EAAA,EAAD,CACEC,KAAK,WACLC,GAAG,mBACHC,MAAM,oCACNrB,QACE8C,GAAiBqE,SAAWlB,GAC5BnD,GAAiBqE,SAAWyE,EAAMnJ,SAAS0E,OAE7C5F,SAvJgB,SAACzB,GAC/B,IAAME,EAAUF,EAAEC,cAAcC,QAE9BqM,GADErM,EACkByC,EAEA,GAEvB,EAwIa,SAUE,sBAAMhC,UAAU,OAAhB,oBACOqC,GAAiBqE,OADxB,YACkCyE,EAAMnJ,SAAS0E,OADjD,WAMHyE,EAAMvF,cACL,eAAC,WAAD,WACE,cAAC,EAAD,CACE7D,SAAUA,EACVC,SAAUA,EACVC,UAAWA,GACXC,WAAYA,IACZC,WAAYA,EACZC,cAAeA,GACfC,iBAAkBA,GAClBC,mBAAoBA,IACpBC,oBAAqBA,GACrBC,wBA5Lc,SAACjD,EAASkD,GAEtCmJ,GADErM,EACkB,SAACkO,GACnB,IAAMC,EAAuB,YAAOD,GAEpC,OADAC,EAAwB7N,KAAK4C,GACtBiL,CACR,EAEmB,SAACD,GAInB,OAHgCA,EAAU3N,QACxC,SAACgD,GAAD,OAAOA,EAAEnC,KAAO8B,EAAQ9B,EAAxB,GAGH,EAEJ,IA+Ke,cAACgN,GAAD,CACE3L,SAAUA,EACVyG,WAAYA,EACZC,YAAaA,EACb1J,eAAgBA,OAIpB,qBAAKgB,UAAU,qCAAf,SACE,qDAOV,cAAC,EAAD,CACE3B,KAAMA,EACNC,OAAQA,EAERC,UAAWA,EACXC,WAAYA,GACZC,WAAYA,EACZC,YAAaA,GACbC,aAAcA,GACdC,aAAcA,GACdG,cAAeA,EACfD,cAAeA,GACfD,cAAeA,GACfG,eAAgBA,EAChBE,gBAAiBA,GACjBD,gBAAiBA,GACjBE,kBAAmBA,GAbd2M,OAgBR9B,IACC,cAAC,GAAD,CACEjI,SAAUA,EACV+H,WAAYA,GACZD,WAAYA,GACZE,gBAAiBA,EACjB1H,iBAAkBA,GAClBC,mBAAoBA,IACpB0H,iBAAkBA,GAClBC,qBAAsBA,GACtB1H,oBAAqBA,GACrB2H,4BAA6BA,OAKtC,C,yDCpVD,2EAMI/F,EAAY,CACdJ,IAAKK,IACLwJ,MAAOvJ,IAAUwJ,UAAU,CAACxJ,IAAUM,KAAMN,IAAUC,SACtDtE,UAAWqE,IAAUC,OACrBC,UAAWF,IAAUG,QAMnBgJ,EAAY,SAAmB1L,GACjC,IAAI9B,EAAY8B,EAAM9B,UAClBuE,EAAYzC,EAAMyC,UAClBqJ,EAAQ9L,EAAM8L,MACd/I,EAAM/C,EAAMiC,IACZe,EAAaC,YAA8BjD,EAAO,CAAC,YAAa,YAAa,QAAS,QAEtFgM,EAAiB,aAEP,IAAVF,EACFE,EAAiB,kBACRF,IACTE,EAAiB,aAAeF,GAGlC,IAAI5I,EAAUC,YAAgBC,IAAWlF,EAAW8N,GAAiBvJ,GACrE,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,CAAC,EAAGP,EAAY,CACpE9E,UAAWgF,IAEd,EAEDwI,EAAUrJ,UAAYA,EACtBqJ,EAAUlI,aA1BS,CACjBvB,IAAK,OA0BQyJ,K,oBCmBfO,EAAOC,QAzDP,SAA2BC,EAAWvF,GAA8B,IAAjBwF,EAAgB,uDAAH,EAExDC,EAAmBC,KAAKC,MAAMH,EAAa,GACjD,IAAKD,IAAcvF,EAAa,OAAO,KAEvC,IAAM4F,EAAa,CACjB7E,QAAS,GACTE,aAAa,EACbH,eAAe,GAIjB,GAAId,EAAcyF,GAAoB,GAAKD,GAAcD,EAAW,CAC9DC,EAAaD,IAAWK,EAAW3E,aAAc,GACrD,IAAK,IAAI6B,EAAO,EAAGA,GAAQ0C,EAAY1C,IACrC8C,EAAW7E,QAAQ5J,KAAK2L,EAE3B,MAEI,GACH9C,EAAcyF,EAAmB,GACjCzF,EAAcyF,GAAoBF,EAClC,CACIvF,EAAcyF,EAAmB,IACnCG,EAAW9E,eAAgB,GAEzBd,EAAcyF,EAAmBF,IACnCK,EAAW3E,aAAc,GAE3B,IACE,IAAI6B,EAAO9C,EAAcyF,EACzB3C,GAAQ9C,EAAcyF,EACtB3C,IAEA8C,EAAW7E,QAAQ5J,KAAK2L,EAE3B,MAEI,GACH9C,EAAcyF,EAAmBF,GACjCA,GAAaC,EACb,CACID,EAAYC,EAAa,IAC3BI,EAAW9E,eAAgB,GAE7B,IAAK,IAAIgC,EAAOyC,EAAYC,EAAa,EAAG1C,GAAQyC,EAAWzC,IAC7D8C,EAAW7E,QAAQ5J,KAAK2L,EAE3B,MACC,IAAK,IAAIA,EAAO,EAAGA,GAAQyC,EAAWzC,IACpC8C,EAAW7E,QAAQ5J,KAAK2L,GAI5B,OAAO8C,CACR,C,kCCxDD,4CAoDerB,IA5CM,SAACD,EAAOuB,GAC3B,IAAI/M,EACJ,OAAQwL,EAAMtM,MACZ,IAAK,UACHc,EAAQ,UACR,MACF,IAAK,QAGL,IAAK,SACHA,EAAQ,SACR,MACF,QACEA,EAAQ,UAIZ,OACE,cAAC,WAAD,UACE,qBAAKxB,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CACEiE,KAAK,KACLzC,MAAOA,EACPgN,KACiB,YAAfxB,EAAMtM,KACJ,cAAC,IAAD,CAAOuD,KAAM,KAEb,cAAC,IAAD,CAAaA,KAAM,OAIzB,sBAAK0C,MAAO,CAAEuF,UAAW,QAASC,SAAU,QAA5C,UACE,oBAAInM,UAAU,2CAAd,SACGgN,EAAMP,OAER8B,GAAqBvB,EAAMxN,OAAS+O,EAAkBvB,EAAMxN,gBAMxE,C,kCClDD,qCAyGeiP,IApFK,SAAC3M,GAEnB,IACEwL,EAKExL,EALFwL,gBACAoB,EAIE5M,EAJF4M,iBACAC,EAGE7M,EAHF6M,kBACAC,EAEE9M,EAFF8M,kBACArB,EACEzL,EADFyL,iBAGF,OACE,qBAAKvN,UAAU,qBAAf,SACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACGsN,EACC,oBAAItN,UAAU,uCAAd,SACGsN,IAGH,GAEF,qBAAKtN,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgB+D,IAAI,KAApB,SACE,cAAC,IAAD,CAAMhB,GAAG,IAAT,uBAED2L,GACC,cAAC,IAAD,CAAgB3K,IAAI,KAAK/D,UAAU,eAAnC,SACG0O,IAGJC,GACC,cAAC,IAAD,CAAgB5K,IAAI,KAAK/D,UAAU,eAAnC,SACG2O,IAGJC,GACC,cAAC,IAAD,CAAgB7K,IAAI,KAAK/D,UAAU,eAAnC,SACG4O,IAGL,cAAC,IAAD,CAAgB7K,IAAI,KAAK6D,QAAM,EAA/B,SACG2F,iBAwClB,C","file":"static/js/27.58c4a129.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport classnames from 'classnames';\r\n// ** Styling Components\r\nimport { Card, CardBody, Row, Col, CustomInput, Button } from 'reactstrap';\r\nimport '@styles/react/libs/noui-slider/noui-slider.scss';\r\n\r\nconst productSidebar = ({\r\n  user,\r\n  gender,\r\n  setGender,\r\n  priceRange,\r\n  categories,\r\n  sidebarOpen,\r\n  inCollection,\r\n  freeShipping,\r\n  setPriceRange,\r\n  setRemountKey,\r\n  setCategories,\r\n  setCurrentPage,\r\n  setFreeShipping,\r\n  setInCollection,\r\n  productCategories,\r\n}) => {\r\n  // ** Array of gender options\r\n  const genderOptions = [\r\n    { value: '', label: 'Tout' },\r\n    { value: 'men', label: 'Homme' },\r\n    { value: 'women', label: 'Femme' },\r\n  ];\r\n  // ** Array of Price Range options\r\n  const priceRangeOptions = [\r\n    { value: '', label: 'Tout' },\r\n    { value: '0,25', label: 'moins de $25' },\r\n    { value: '25,150', label: '$25 - $150' },\r\n    { value: '150,500', label: '$150 - $500' },\r\n    { value: '500,1000', label: '$500 - $1000' },\r\n    { value: '1000', label: 'au dessus de $1000' },\r\n  ];\r\n\r\n  // ** Price Range Filter Handler\r\n  const genderFilterHandler = (e) => {\r\n    if (e.currentTarget.checked) {\r\n      setGender(e.currentTarget.value);\r\n      setCurrentPage(1);\r\n    }\r\n  };\r\n\r\n  // ** Price Range Filter Handler\r\n  const priceRangeFilterHandler = (e) => {\r\n    if (e.currentTarget.checked) {\r\n      setPriceRange(e.currentTarget.value);\r\n      setCurrentPage(1);\r\n    }\r\n  };\r\n\r\n  // ** My Collection Filter\r\n  const inCollectionFilterHandler = (e) => {\r\n    setInCollection(e.currentTarget.checked);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // ** Filter by Free Shipping Handler\r\n  const freeShippingFilterHandler = (e) => {\r\n    setFreeShipping(e.currentTarget.checked);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // ** Categorie Filter Handler\r\n  const categoriesFilterHandler = (e) => {\r\n    let categoriesArray = categories;\r\n    const value = e.currentTarget.value;\r\n    const checked = e.currentTarget.checked;\r\n    if (checked && !categoriesArray.includes(value)) {\r\n      categoriesArray.push(value);\r\n    } else {\r\n      // eslint-disable-next-line\r\n      categoriesArray = categoriesArray.filter((c) => c != value);\r\n    }\r\n    setCategories([...categoriesArray]);\r\n    setCurrentPage(1);\r\n  };\r\n  // ** Reset Filter\r\n  const resetFilterHandler = () => {\r\n    setFreeShipping(false);\r\n    setPriceRange('');\r\n    setCategories([]);\r\n    setCurrentPage(1);\r\n    setRemountKey(Date.now());\r\n  };\r\n\r\n  return (\r\n    <div className='sidebar-detached sidebar-left'>\r\n      <div className='sidebar'>\r\n        <div\r\n          className={classnames('sidebar-shop', {\r\n            show: sidebarOpen,\r\n          })}\r\n        >\r\n          <Row>\r\n            <Col sm='12'>\r\n              <h6 className='filter-heading d-none d-lg-block'>Filtres</h6>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            <CardBody>\r\n              {/* In Collection Filter */}\r\n              {user.username === 'juan-jackus' && (\r\n                <div className='d-flex my-2'>\r\n                  <h6 className='filter-title my-0 mr-1'>Ma Collection</h6>\r\n                  <CustomInput\r\n                    type='checkbox'\r\n                    id='inCollection-filter'\r\n                    label=''\r\n                    defaultChecked={inCollection}\r\n                    onChange={inCollectionFilterHandler}\r\n                  />\r\n                </div>\r\n              )}\r\n              {/* Gender Radio */}\r\n              <div>\r\n                <h6 className='filter-title mt-0'>Genre</h6>\r\n                <ul className='list-unstyled gender'>\r\n                  {genderOptions.map((opt, i) => {\r\n                    return (\r\n                      <li key={opt.value}>\r\n                        <CustomInput\r\n                          className='mb-1'\r\n                          type='radio'\r\n                          id={`gender${i}`}\r\n                          name='gender-radio'\r\n                          value={opt.value}\r\n                          label={opt.label}\r\n                          defaultChecked={gender === opt.value}\r\n                          onChange={genderFilterHandler}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              {/* Free Shipping Filter */}\r\n              <div className='d-flex my-2'>\r\n                <h6 className='filter-title my-0 mr-1'>Livraison gratuite</h6>\r\n                <CustomInput\r\n                  type='checkbox'\r\n                  id='freeshipping-filter'\r\n                  label=''\r\n                  defaultChecked={freeShipping}\r\n                  onChange={freeShippingFilterHandler}\r\n                />\r\n              </div>\r\n              {/* Price Range Radio */}\r\n              <div>\r\n                <h6 className='filter-title mt-0'>Fourchette de prix</h6>\r\n                <ul className='list-unstyled price-range'>\r\n                  {priceRangeOptions.map((pr, i) => {\r\n                    return (\r\n                      <li key={pr.value}>\r\n                        <CustomInput\r\n                          type='radio'\r\n                          id={`price-range${i}`}\r\n                          name='price-range-radio'\r\n                          value={pr.value}\r\n                          label={pr.label}\r\n                          defaultChecked={priceRange === pr.value}\r\n                          onChange={priceRangeFilterHandler}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              {/* Categories Select */}\r\n              <div>\r\n                <h6 className='filter-title mt-1'>Catégories</h6>\r\n                <ul className='list-unstyled brand-list'>\r\n                  {productCategories.map((cat, i) => {\r\n                    return (\r\n                      <li key={cat.value}>\r\n                        <CustomInput\r\n                          type='checkbox'\r\n                          id={`categories-filter${i}`}\r\n                          value={cat.value}\r\n                          label={cat.label}\r\n                          defaultChecked={categories.includes(\r\n                            cat.value.toString()\r\n                          )}\r\n                          onChange={categoriesFilterHandler}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              {/* Clear Filter Button */}\r\n              <Button.Ripple\r\n                className='w-100 mt-3'\r\n                color='primary'\r\n                outline\r\n                onClick={resetFilterHandler}\r\n              >\r\n                Effacer les filtres\r\n              </Button.Ripple>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default productSidebar;\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom';\r\n// ** Third Party Components\r\nimport classnames from 'classnames';\r\n// ** Styling Components\r\nimport { Star, Eye, Delete, RefreshCw } from 'react-feather';\r\nimport {\r\n  Card,\r\n  Badge,\r\n  Button,\r\n  CardBody,\r\n  CardText,\r\n  CustomInput,\r\n  UncontrolledTooltip,\r\n} from 'reactstrap';\r\n\r\nconst ProductCards = (props) => {\r\n  // ** Props\r\n  const {\r\n    dispatch,\r\n    products,\r\n    showTrash,\r\n    getProduct,\r\n    activeView,\r\n    setActionType,\r\n    selectedProducts,\r\n    setProductToManage,\r\n    setShowProductModal,\r\n    productSelectionHandler,\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      id='product-cards'\r\n      className={classnames({\r\n        'grid-view': activeView === 'grid',\r\n        'list-view': activeView === 'list',\r\n      })}\r\n    >\r\n      {/* Renders products */}\r\n      {products.map((product, i) => {\r\n        return (\r\n          <Card className='ecommerce-card' key={product.name}>\r\n            <div className='item-img text-center mx-auto'>\r\n              {/* Grid View Free Shipping  */}\r\n              {product.moreInfos?.freeShipping ? (\r\n                <CardText\r\n                  className={classnames('free-shipping', {\r\n                    'd-none': activeView === 'list',\r\n                  })}\r\n                >\r\n                  <Badge color='light-success'>Livraison gratuite</Badge>\r\n                </CardText>\r\n              ) : null}\r\n              {/* Checkbox */}\r\n              <div className='product-checkbox'>\r\n                <CustomInput\r\n                  type='checkbox'\r\n                  id={`product-checkbox${i}`}\r\n                  label=''\r\n                  checked={selectedProducts.some((p) => p.id === product.id)}\r\n                  onChange={(e) =>\r\n                    productSelectionHandler(e.currentTarget.checked, product)\r\n                  }\r\n                />\r\n              </div>\r\n              {/* Images */}\r\n              <Link\r\n                to={`/products/edit/${product.id}`}\r\n                onClick={() => dispatch(getProduct(product.id, product))}\r\n              >\r\n                <img\r\n                  className='img-fluid card-img-top p-1 background-spinner'\r\n                  src={product.images[0]}\r\n                  alt={product.name}\r\n                />\r\n              </Link>\r\n            </div>\r\n            <CardBody>\r\n              <div className='item-wrapper'>\r\n                {/* Rating */}\r\n                <div className='item-rating'>\r\n                  <ul className='unstyled-list list-inline'>\r\n                    {new Array(5).fill().map((listItem, index) => {\r\n                      return (\r\n                        <li key={index} className='ratings-list-item mr-25'>\r\n                          <Star\r\n                            className={classnames({\r\n                              'filled-star':\r\n                                index + 1 <= product.moreInfos?.rating,\r\n                              'unfilled-star':\r\n                                index + 1 > product.moreInfos?.rating,\r\n                            })}\r\n                          />\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n                {/* Price */}\r\n                <div className='item-cost'>\r\n                  <h6 className='item-price'>\r\n                    {`$${(+product.price.toFixed(2)).toLocaleString()}`}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              {/* Name & Brand */}\r\n              <h6 className='item-name'>\r\n                <Link\r\n                  id={`product-name${i}`}\r\n                  className='text-body'\r\n                  to={`/products/edit/${product.id}`}\r\n                  onClick={() => dispatch(getProduct(product.id, product))}\r\n                >\r\n                  {product.name}\r\n                </Link>\r\n                <UncontrolledTooltip\r\n                  placement='top'\r\n                  target={`product-name${i}`}\r\n                >\r\n                  {product.name}\r\n                </UncontrolledTooltip>\r\n                {product?.moreInfos?.brand && (\r\n                  <CardText tag='span' className='item-company text-primary'>\r\n                    Par{' '}\r\n                    <span className='company-name'>\r\n                      {product.moreInfos.brand}\r\n                    </span>\r\n                  </CardText>\r\n                )}\r\n              </h6>\r\n              {/* Description */}\r\n              <CardText className='item-description'>\r\n                {product.description}\r\n              </CardText>\r\n            </CardBody>\r\n            <div className='item-options text-center'>\r\n              {/* List View Price & Free Shipping */}\r\n              <div className='item-wrapper'>\r\n                <div className='item-cost'>\r\n                  <h4 className='item-price'>{`$${product.price}`}</h4>\r\n                  {product?.moreInfos?.freeShipping ? (\r\n                    <CardText className='shipping'>\r\n                      <Badge color='light-success'>Free Shipping</Badge>\r\n                    </CardText>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              {showTrash ? (\r\n                // Restore Button\r\n                <Button\r\n                  color='warning'\r\n                  className='btn-cart restore-btn'\r\n                  onClick={() => {\r\n                    dispatch(setProductToManage(product));\r\n                    setActionType('RESTORE');\r\n                    setShowProductModal(true);\r\n                  }}\r\n                >\r\n                  <span className='text-nowrap'>\r\n                    <RefreshCw className='mr-50' size={14} />\r\n                    Restaurer\r\n                  </span>\r\n                </Button>\r\n              ) : (\r\n                // View Button\r\n                <Button\r\n                  color='primary'\r\n                  tag={Link}\r\n                  className='btn-cart view-btn'\r\n                  to={`/products/edit/${product.id}`}\r\n                  onClick={() => dispatch(getProduct(product.id, product))}\r\n                >\r\n                  <span className='text-nowrap'>\r\n                    <Eye className='mr-50' size={14} />\r\n                    Voir\r\n                  </span>\r\n                </Button>\r\n              )}\r\n              {/* Delete Button */}\r\n              <Button\r\n                color='secondary'\r\n                className='btn-cart delete-btn'\r\n                onClick={() => {\r\n                  dispatch(setProductToManage(product));\r\n                  setActionType('DELETE');\r\n                  setShowProductModal(true);\r\n                }}\r\n              >\r\n                <span className='text-nowrap'>\r\n                  <Delete className='mr-50' size={14} />\r\n                  Supprimer\r\n                </span>\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCards;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'group'\n};\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      vertical = props.vertical,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","// ** React Imports\r\nimport { Link } from 'react-router-dom';\r\n// ** Third Party Components\r\nimport classnames from 'classnames';\r\n// ** Styling Components\r\nimport { AlignLeft, Grid, List, Trash2 } from 'react-feather';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n  ButtonGroup,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown,\r\n} from 'reactstrap';\r\n\r\nconst ProductsHeader = (props) => {\r\n  // ** Props\r\n  const {\r\n    perPage,\r\n    dispatch,\r\n    showTrash,\r\n    activeView,\r\n    setPerPage,\r\n    setUiState,\r\n    sortByValue,\r\n    setActionType,\r\n    totalProducts,\r\n    setCurrentPage,\r\n    setSortByValue,\r\n    setSidebarOpen,\r\n    selectedProducts,\r\n    getTrashedProducts,\r\n    setShowProductModal,\r\n  } = props;\r\n\r\n  // ** Sorting options\r\n  const sortByOptions = {\r\n    newest: 'Plus récents',\r\n    oldest: 'Plus anciens',\r\n    price_desc: 'Prix decroissant',\r\n    price_asc: 'Prix ascendant',\r\n    rating_desc: 'Note decroissant',\r\n    rating_asc: 'Note ascendant',\r\n  };\r\n  const trashSortByOptions = {\r\n    trash_desc: 'Récemment supprimé',\r\n    trash_asc: 'Aciennement supprimé',\r\n  };\r\n  const selectedSortOption = showTrash ? trashSortByOptions : sortByOptions;\r\n  const trashBtnColor = showTrash ? '#fbdddd' : 'inherit';\r\n\r\n  // ** Render Sorting dropdown options\r\n  const renderSortToggle = () => {\r\n    return Object.keys(selectedSortOption).map((option, i) => {\r\n      if (option === sortByValue) return null;\r\n      return (\r\n        <DropdownItem\r\n          key={i}\r\n          className='w-100'\r\n          onClick={() => setSortByValue(option)}\r\n        >\r\n          {selectedSortOption[option]}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm='12' className='d-flex align-items-center'>\r\n        {/* Hamburguer Menu */}\r\n        <button\r\n          className='navbar-toggler sidebar-toggler '\r\n          onClick={() => setSidebarOpen(true)}\r\n        >\r\n          <span className='text d-block d-lg-none mr-1'>\r\n            <AlignLeft /> Filtre\r\n          </span>\r\n        </button>\r\n        {/* Delete, Restore & Add Product(s) Button */}\r\n        <div className=' text-nowrap '>\r\n          {selectedProducts.length ? (\r\n            <>\r\n              {/* Delete Button */}\r\n              <Button.Ripple\r\n                color='danger'\r\n                className='mr-1'\r\n                onClick={() => {\r\n                  setActionType('DELETE');\r\n                  setShowProductModal(true);\r\n                }}\r\n              >\r\n                Supprimer\r\n              </Button.Ripple>\r\n              {/* Restore Button */}\r\n              {showTrash && (\r\n                <Button.Ripple\r\n                  color='warning'\r\n                  onClick={() => {\r\n                    setActionType('RESTORE');\r\n                    setShowProductModal(true);\r\n                  }}\r\n                >\r\n                  Restaurer\r\n                </Button.Ripple>\r\n              )}\r\n            </>\r\n          ) : (\r\n            // Add Button\r\n            !showTrash && (\r\n              <Button.Ripple\r\n                className='mr-1'\r\n                color='primary'\r\n                tag={Link}\r\n                to='/products/add'\r\n              >\r\n                Ajouter un produit\r\n              </Button.Ripple>\r\n            )\r\n          )}\r\n        </div>\r\n        {/* Trash Button */}\r\n        <div className='ml-auto '>\r\n          <Button.Ripple\r\n            color='danger'\r\n            outline\r\n            style={{ backgroundColor: trashBtnColor }}\r\n            onClick={() => getTrashedProducts()}\r\n          >\r\n            <Trash2 className='mr-50' size={15} />\r\n            Corbeille\r\n          </Button.Ripple>\r\n        </div>\r\n      </Col>\r\n      <Col sm='12'>\r\n        <div className='ecommerce-header-items'>\r\n          <div className='d-flex align-items-center mt-1'>\r\n            <Label for='products-per-page'>Afficher</Label>\r\n            <CustomInput\r\n              className='form-control mx-50'\r\n              type='select'\r\n              id='products-per-page'\r\n              defaultValue={perPage}\r\n              onChange={(e) => {\r\n                setPerPage(e.target.value);\r\n                setCurrentPage(1);\r\n              }}\r\n              style={{\r\n                width: '5rem',\r\n                padding: '0 0.8rem',\r\n                backgroundPosition:\r\n                  'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0',\r\n              }}\r\n            >\r\n              <option value='9'>9</option>\r\n              <option value='18'>18</option>\r\n              <option value='27'>27</option>\r\n            </CustomInput>\r\n            <Label for='rows-per-page' className='mr-1'>\r\n              Entrés sur\r\n            </Label>\r\n            <CustomInput\r\n              className='form-control text-center mr-3'\r\n              type='text'\r\n              id='rows-per-page'\r\n              value={totalProducts}\r\n              readOnly\r\n              style={{ width: '3rem', padding: '0.5rem' }}\r\n            />\r\n          </div>\r\n          <div className='view-options d-flex mt-1'>\r\n            <UncontrolledButtonDropdown className='dropdown-sort'>\r\n              <DropdownToggle\r\n                className='text-capitalize mr-1'\r\n                color='primary'\r\n                outline\r\n                caret\r\n              >\r\n                <span className='small '>Trier par : </span>\r\n                {selectedSortOption[sortByValue]}\r\n              </DropdownToggle>\r\n              <DropdownMenu>{renderSortToggle()}</DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n            <ButtonGroup className='btn-group-toggle'>\r\n              {/* Grid Button */}\r\n              <Button\r\n                tag='label'\r\n                className={classnames('btn-icon view-btn grid-view-btn', {\r\n                  active: activeView === 'grid',\r\n                })}\r\n                color='primary'\r\n                outline\r\n                onClick={() => dispatch(setUiState({ activeView: 'grid' }))}\r\n              >\r\n                <Grid size={18} />\r\n              </Button>\r\n              {/* List Button */}\r\n              <Button\r\n                tag='label'\r\n                className={classnames('btn-icon view-btn list-view-btn', {\r\n                  active: activeView === 'list',\r\n                })}\r\n                color='primary'\r\n                outline\r\n                onClick={() => dispatch(setUiState({ activeView: 'list' }))}\r\n              >\r\n                <List size={18} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProductsHeader;\r\n","// ** Style Components\r\nimport { Search } from 'react-feather';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n} from 'reactstrap';\r\n\r\nconst ProductsSearchbar = ({ searchTerm, setSearchTerm, setCurrentPage }) => {\r\n  // ** Handele search input\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <div className='ecommerce-searchbar'>\r\n      <Row className='mt-1'>\r\n        <Col sm='12'>\r\n          <InputGroup className='input-group-merge'>\r\n            <Input\r\n              className='search-product'\r\n              placeholder='Rechercher un produit'\r\n              defaultValue={searchTerm}\r\n              onChange={_.debounce(handleSearch, 300)}\r\n            />\r\n            <InputGroupAddon addonType='append'>\r\n              <InputGroupText>\r\n                <Search className='text-muted' size={14} />\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsSearchbar;\r\n","// ** React\r\nimport { useEffect } from 'react';\r\n// ** Styling Components\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\nimport paginationHandler from '@src/utility/paginationHandler';\r\nimport _ from 'lodash';\r\n\r\nconst ProductsPage = ({\r\n  products,\r\n  totalPages,\r\n  currentPage,\r\n  setCurrentPage,\r\n}) => {\r\n  useEffect(() => {\r\n    if (products.length <= 0) setCurrentPage(1);\r\n  }, [products.length]);\r\n  const pageToShow = 9;\r\n  const paginationItems = paginationHandler(\r\n    totalPages,\r\n    currentPage,\r\n    pageToShow\r\n  );\r\n  // ** Handles pagination\r\n  const handlePageChange = (val) => {\r\n    if (val === 'next') {\r\n      if (currentPage === totalPages) return;\r\n      setCurrentPage(currentPage + 1);\r\n    } else if (val === 'prev') {\r\n      if (currentPage === 1) return;\r\n      setCurrentPage(currentPage - 1);\r\n    } else {\r\n      if (currentPage === val) return;\r\n      setCurrentPage(val);\r\n    }\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // ** Render pages\r\n  const renderPageItems = () => {\r\n    return paginationItems.numbers.map((number, index) => {\r\n      return (\r\n        <PaginationItem\r\n          key={number}\r\n          active={currentPage === number}\r\n          onClick={() => handlePageChange(number)}\r\n        >\r\n          <PaginationLink href='/' onClick={(e) => e.preventDefault()}>\r\n            {number}\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Pagination className='d-flex justify-content-center'>\r\n      {/* Prev Buttons */}\r\n      <PaginationItem\r\n        disabled={currentPage === 1}\r\n        className='prev-item'\r\n        onClick={() => handlePageChange('prev')}\r\n      >\r\n        <PaginationLink\r\n          href='/'\r\n          onClick={(e) => e.preventDefault()}\r\n        ></PaginationLink>\r\n      </PaginationItem>\r\n      {/* Pagination Truncate Start */}\r\n      {paginationItems.truncateStart && (\r\n        <PaginationItem\r\n          key={1}\r\n          active={currentPage === 1}\r\n          onClick={() => handlePageChange(1)}\r\n        >\r\n          <PaginationLink href='/' onClick={(e) => e.preventDefault()}>\r\n            1\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n      )}\r\n      {paginationItems.truncateStart && paginationItems.numbers[0] > 2 && (\r\n        <div className='pagination-truncate px-2'>...</div>\r\n      )}\r\n      {/* Pages */}\r\n      {renderPageItems()}\r\n      {/*  Pagination Truncate End */}\r\n      {paginationItems.truncateEnd &&\r\n        totalPages -\r\n          paginationItems.numbers[paginationItems.numbers.length - 1] >\r\n          1 && <div className='pagination-truncate px-2'>...</div>}\r\n      {paginationItems.truncateEnd && (\r\n        <PaginationItem\r\n          key={totalPages}\r\n          active={currentPage === totalPages}\r\n          onClick={() => handlePageChange(totalPages)}\r\n        >\r\n          <PaginationLink href='/' onClick={(e) => e.preventDefault()}>\r\n            {totalPages}\r\n          </PaginationLink>\r\n        </PaginationItem>\r\n      )}\r\n      {/* Next Buttons */}\r\n      <PaginationItem\r\n        className='next-item'\r\n        disabled={currentPage === totalPages}\r\n        onClick={() => handlePageChange('next')}\r\n      >\r\n        <PaginationLink\r\n          href='/'\r\n          onClick={(e) => e.preventDefault()}\r\n        ></PaginationLink>\r\n      </PaginationItem>\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","// ** Styling Components\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Spinner,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\n\r\nconst ProductModal = (props) => {\r\n  // ** Props\r\n  const {\r\n    dispatch,\r\n    processing,\r\n    actionType,\r\n    productToManage,\r\n    selectedProducts,\r\n    showProductModal,\r\n    setProductToManage,\r\n    setShowProductModal,\r\n    showProductModalData,\r\n    productDeleteRestoreHandler,\r\n  } = props;\r\n  const actionText = actionType === 'RESTORE' ? 'restauration' : 'suppression';\r\n  const style = actionType === 'RESTORE' ? 'warning' : 'danger';\r\n  // ** Close Modal Handler\r\n  const closeModalHandler = () => {\r\n    if (productToManage) {\r\n      dispatch(setProductToManage(null));\r\n    }\r\n    setShowProductModal(!showProductModal);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={showProductModal}\r\n      modalClassName={`modal-${style}`}\r\n      toggle={closeModalHandler}\r\n    >\r\n      <ModalHeader toggle={closeModalHandler}></ModalHeader>\r\n      <ModalBody>\r\n        <p className={`text-${style} font-weight-bold`}>\r\n          Confirmer la {actionText}\r\n          {!productToManage && selectedProducts.length > 1 && (\r\n            <span> de {selectedProducts.length} produits</span>\r\n          )}{' '}\r\n          :\r\n        </p>\r\n        {showProductModalData()}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color={style}\r\n          disabled={processing}\r\n          onClick={() => productDeleteRestoreHandler()}\r\n        >\r\n          {processing ? (\r\n            <>\r\n              <Spinner size='sm' color='white' />\r\n              <span className='ml-50'>Traitement...</span>\r\n            </>\r\n          ) : (\r\n            'Confirmer'\r\n          )}\r\n        </Button>\r\n        <Button\r\n          color='secondary'\r\n          disabled={processing}\r\n          onClick={closeModalHandler}\r\n        >\r\n          Annuler\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","// ** React Imports\r\nimport { useState, useEffect, Fragment } from 'react';\r\n// ** Redux Store and Actions\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  setUiState,\r\n  getProduct,\r\n  deleteProduct,\r\n  restoreProduct,\r\n  getProductsData,\r\n  setProductToManage,\r\n  deleteMultipleProduct,\r\n  restoreMultipleProduct,\r\n} from '@store/actions/products';\r\n// ** Third Party Components\r\nimport _ from 'lodash';\r\nimport { toast, Slide } from 'react-toastify';\r\nimport classnames from 'classnames';\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs';\r\nimport Sidebar from './components/products/ProductSidebar';\r\nimport ToastContent from './components/users/ToastContent';\r\nimport ProductCards from './components/products/ProductCards';\r\nimport ProductsHeader from './components/products/ProductsHeader';\r\nimport ProductsSearchbar from './components/products/ProductsSearchbar';\r\nimport ProductsPagination from './components/products/ProductsPagination';\r\nimport ProductModal from './components/products/productEdit/ProductModal';\r\n// ** Styling Components\r\nimport { CustomInput, Container, Spinner } from 'reactstrap';\r\nimport '@styles/base/pages/app-ecommerce.scss';\r\n\r\nconst ProductsPage = () => {\r\n  // ** Vars\r\n  const dispatch = useDispatch();\r\n  const { state } = useLocation();\r\n  const user = useSelector((state) => state.auth.userData);\r\n  const store = useSelector((state) => state.products);\r\n  const { activeView = 'grid' } = store.uiState;\r\n  const {\r\n    params,\r\n    products,\r\n    totalPages,\r\n    totalProducts,\r\n    productToManage,\r\n    productCategories,\r\n  } = store;\r\n\r\n  // ** States\r\n  const [searchTerm, setSearchTerm] = useState(params.q || ''),\r\n    [currentPage, setCurrentPage] = useState(params.page || 1),\r\n    [perPage, setPerPage] = useState(params.perPage || 9),\r\n    [sortByValue, setSortByValue] = useState(params.sortBy || 'newest'),\r\n    [gender, setGender] = useState(params.gender || ''),\r\n    [categories, setCategories] = useState(params.categories || []),\r\n    [priceRange, setPriceRange] = useState(params.priceRange || ''),\r\n    [inCollection, setInCollection] = useState(params.inCollection || false),\r\n    [freeShipping, setFreeShipping] = useState(params.freeShipping || false),\r\n    [showTrash, setShowTrash] = useState(params.trash || false),\r\n    [selectedProducts, setSelectedProducts] = useState([]),\r\n    [sidebarOpen, setSidebarOpen] = useState(false),\r\n    [showProductModal, setShowProductModal] = useState(!!productToManage),\r\n    [actionType, setActionType] = useState(state?.actionType || null),\r\n    [processing, setProcessing] = useState(false),\r\n    [remountKey, setRemountKey] = useState(0),\r\n    [loadingData, setLoadingData] = useState(false);\r\n\r\n  // ** Get All products\r\n  useEffect(async () => {\r\n    setLoadingData(true);\r\n    await dispatch(\r\n      getProductsData({\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage,\r\n        sortBy: sortByValue,\r\n        gender,\r\n        categories,\r\n        priceRange,\r\n        inCollection,\r\n        freeShipping,\r\n        trash: showTrash,\r\n      })\r\n    );\r\n    setLoadingData(false);\r\n  }, [\r\n    searchTerm,\r\n    currentPage,\r\n    perPage,\r\n    sortByValue,\r\n    gender,\r\n    categories,\r\n    priceRange,\r\n    inCollection,\r\n    freeShipping,\r\n    showTrash,\r\n  ]);\r\n\r\n  // ** Product selection handler\r\n  const productSelectionHandler = (checked, product) => {\r\n    if (checked) {\r\n      setSelectedProducts((prevState) => {\r\n        const updatedSelectedProducts = [...prevState];\r\n        updatedSelectedProducts.push(product);\r\n        return updatedSelectedProducts;\r\n      });\r\n    } else {\r\n      setSelectedProducts((prevState) => {\r\n        const updatedSelectedProducts = prevState.filter(\r\n          (p) => p.id !== product.id\r\n        );\r\n        return updatedSelectedProducts;\r\n      });\r\n    }\r\n  };\r\n  // ** All Product selection handler\r\n  const selectAllProductHandler = (e) => {\r\n    const checked = e.currentTarget.checked;\r\n    if (checked) {\r\n      setSelectedProducts(products);\r\n    } else {\r\n      setSelectedProducts([]);\r\n    }\r\n  };\r\n  // ** Trashed Product\r\n  const getTrashedProducts = async () => {\r\n    const trash = !showTrash;\r\n    const sortBy = trash ? 'trash_desc' : 'newest';\r\n    setCurrentPage(1);\r\n    setShowTrash(trash);\r\n    setSortByValue(sortBy);\r\n    setSelectedProducts([]);\r\n    setShowTrash(!showTrash);\r\n  };\r\n  // ** Show Product(s) to delete in deletion Modal\r\n  const showProductModalData = () => {\r\n    if (productToManage) {\r\n      return (\r\n        <ul>\r\n          <li>{productToManage.name}</li>\r\n        </ul>\r\n      );\r\n    } else if (selectedProducts.length) {\r\n      return (\r\n        <ul style={{ maxHeight: '300px', overflow: 'auto' }}>\r\n          {selectedProducts.map((p, i) => (\r\n            <li key={i}>{p.name}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  };\r\n  // ** Product(s) deletion Handler\r\n  const productDeleteRestoreHandler = async () => {\r\n    setProcessing(true);\r\n    let toastValue;\r\n    const action = {\r\n      single: deleteProduct,\r\n      mutiple: deleteMultipleProduct,\r\n      text: 'suppression',\r\n    };\r\n    // eslint-disable-next-line\r\n    if (actionType == 'RESTORE') {\r\n      action.single = restoreProduct;\r\n      action.mutiple = restoreMultipleProduct;\r\n      action.text = 'restauration';\r\n    }\r\n    if (productToManage) {\r\n      const successDeletion = await dispatch(\r\n        action.single(productToManage, showTrash)\r\n      ).then((res) => res);\r\n      toastValue = successDeletion\r\n        ? {\r\n            type: 'success',\r\n            text: `Suppression réussie de : ${productToManage.name}`,\r\n          }\r\n        : {\r\n            type: 'error',\r\n            text: `Echec de la suppression de : ${productToManage.name}`,\r\n          };\r\n    } else if (selectedProducts.length) {\r\n      // If there is many Products to delete\r\n      const successDeletion = await dispatch(\r\n        action.mutiple(selectedProducts, showTrash)\r\n      ).then((res) => res);\r\n      // Check if all deletion are successfull\r\n      toastValue =\r\n        successDeletion === selectedProducts.length\r\n          ? {\r\n              type: 'success',\r\n              text: `${action.text} reussie de ${selectedProducts.length} produit(s)`,\r\n            }\r\n          : {\r\n              type: 'error',\r\n              text: `Echec de la ${action.text} ${\r\n                selectedProducts.length - successDeletion\r\n              } produit(s)`,\r\n            };\r\n    }\r\n    setProcessing(false);\r\n    setShowProductModal(!showProductModal);\r\n    dispatch(setProductToManage(null));\r\n    if (toastValue.type === 'success' && !productToManage) {\r\n      setSelectedProducts([]);\r\n    }\r\n    toast[toastValue.type](ToastContent(toastValue, showProductModalData), {\r\n      transition: Slide,\r\n      autoClose: 5000,\r\n      pauseOnHover: true,\r\n      // hideProgressBar: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        breadCrumbTitle='Liste des Produits'\r\n        breadCrumbActive='produits'\r\n      />\r\n      <Container>\r\n        <div className='content-detached content-right'>\r\n          <div className='content-body'>\r\n            <ProductsHeader\r\n              dispatch={dispatch}\r\n              perPage={perPage}\r\n              showTrash={showTrash}\r\n              setPerPage={setPerPage}\r\n              sortByValue={sortByValue}\r\n              activeView={activeView}\r\n              setUiState={setUiState}\r\n              setActionType={setActionType}\r\n              totalProducts={totalProducts}\r\n              setCurrentPage={setCurrentPage}\r\n              setSortByValue={setSortByValue}\r\n              setSidebarOpen={setSidebarOpen}\r\n              selectedProducts={selectedProducts}\r\n              getTrashedProducts={getTrashedProducts}\r\n              setShowProductModal={setShowProductModal}\r\n            />\r\n            <div\r\n              className={classnames('body-content-overlay', {\r\n                show: sidebarOpen,\r\n              })}\r\n              onClick={() => setSidebarOpen(false)}\r\n            ></div>\r\n            <ProductsSearchbar\r\n              searchTerm={searchTerm}\r\n              setSearchTerm={setSearchTerm}\r\n              setCurrentPage={setCurrentPage}\r\n            />\r\n            {/* Loarder */}\r\n            {loadingData && (\r\n              <div className=' p-3 d-flex justify-content-center '>\r\n                <Spinner id='datable-loader' />\r\n              </div>\r\n            )}\r\n            <div className={classnames({ 'd-none': loadingData })}>\r\n              {/* Select All Product Toggler */}\r\n              <div className='mt-2'>\r\n                <CustomInput\r\n                  type='checkbox'\r\n                  id='toogle-selection'\r\n                  label='Sélection de tous les produits'\r\n                  checked={\r\n                    selectedProducts.length === perPage ||\r\n                    selectedProducts.length === store.products.length\r\n                  }\r\n                  onChange={selectAllProductHandler}\r\n                >\r\n                  <span className='ml-1'>\r\n                    {`(${selectedProducts.length}/${store.products.length})`}\r\n                  </span>\r\n                </CustomInput>\r\n              </div>\r\n\r\n              {store.totalProducts ? (\r\n                <Fragment>\r\n                  <ProductCards\r\n                    dispatch={dispatch}\r\n                    products={products}\r\n                    showTrash={showTrash}\r\n                    getProduct={getProduct}\r\n                    activeView={activeView}\r\n                    setActionType={setActionType}\r\n                    selectedProducts={selectedProducts}\r\n                    setProductToManage={setProductToManage}\r\n                    setShowProductModal={setShowProductModal}\r\n                    productSelectionHandler={productSelectionHandler}\r\n                  />\r\n                  <ProductsPagination\r\n                    products={products}\r\n                    totalPages={totalPages}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                  />\r\n                </Fragment>\r\n              ) : (\r\n                <div className='d-flex justify-content-center mt-2'>\r\n                  <p>No Results</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Sidebar\r\n          user={user}\r\n          gender={gender}\r\n          key={remountKey}\r\n          setGender={setGender}\r\n          priceRange={priceRange}\r\n          categories={categories}\r\n          sidebarOpen={sidebarOpen}\r\n          inCollection={inCollection}\r\n          freeShipping={freeShipping}\r\n          setCategories={setCategories}\r\n          setRemountKey={setRemountKey}\r\n          setPriceRange={setPriceRange}\r\n          setCurrentPage={setCurrentPage}\r\n          setInCollection={setInCollection}\r\n          setFreeShipping={setFreeShipping}\r\n          productCategories={productCategories}\r\n        />\r\n      </Container>\r\n      {showProductModal && (\r\n        <ProductModal\r\n          dispatch={dispatch}\r\n          actionType={actionType}\r\n          processing={processing}\r\n          productToManage={productToManage}\r\n          selectedProducts={selectedProducts}\r\n          setProductToManage={setProductToManage}\r\n          showProductModal={showProductModal}\r\n          showProductModalData={showProductModalData}\r\n          setShowProductModal={setShowProductModal}\r\n          productDeleteRestoreHandler={productDeleteRestoreHandler}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"fluid\", \"tag\"]);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","/* eslint-disable */\r\nfunction paginationHandler(totalPage, currentPage, pageToShow = 7) {\r\n  // Numbers of Pagination to show (ood number)}\r\n  const halfOfPageToShow = Math.trunc(pageToShow / 2);\r\n  if (!totalPage || !currentPage) return null;\r\n\r\n  const pagination = {\r\n    numbers: [],\r\n    truncateEnd: false,\r\n    truncateStart: false,\r\n  };\r\n\r\n  // ********\r\n  if (currentPage - halfOfPageToShow <= 0 && pageToShow <= totalPage) {\r\n    if (pageToShow < totalPage) pagination.truncateEnd = true;\r\n    for (let page = 1; page <= pageToShow; page++) {\r\n      pagination.numbers.push(page);\r\n    }\r\n  }\r\n  // ********\r\n  else if (\r\n    currentPage - halfOfPageToShow > 0 &&\r\n    currentPage + halfOfPageToShow <= totalPage\r\n  ) {\r\n    if (currentPage - halfOfPageToShow > 1) {\r\n      pagination.truncateStart = true;\r\n    }\r\n    if (currentPage + halfOfPageToShow < totalPage) {\r\n      pagination.truncateEnd = true;\r\n    }\r\n    for (\r\n      let page = currentPage - halfOfPageToShow;\r\n      page <= currentPage + halfOfPageToShow;\r\n      page++\r\n    ) {\r\n      pagination.numbers.push(page);\r\n    }\r\n  }\r\n  // ********\r\n  else if (\r\n    currentPage + halfOfPageToShow > totalPage &&\r\n    totalPage >= pageToShow\r\n  ) {\r\n    if (totalPage - pageToShow > 1) {\r\n      pagination.truncateStart = true;\r\n    }\r\n    for (let page = totalPage - pageToShow + 1; page <= totalPage; page++) {\r\n      pagination.numbers.push(page);\r\n    }\r\n  } else {\r\n    for (let page = 1; page <= totalPage; page++) {\r\n      pagination.numbers.push(page);\r\n    }\r\n  }\r\n\r\n  return pagination;\r\n}\r\n\r\nmodule.exports = paginationHandler;\r\n","// ** React\r\nimport { Fragment } from 'react';\r\n// ** Third Party Components\r\nimport Avatar from '@components/avatar';\r\n// ** Styling Components\r\nimport { Check, AlertCircle } from 'react-feather';\r\n\r\n// ** Toast Message Handler\r\nconst ToastContent = (toast, showValueToDelete) => {\r\n  let color;\r\n  switch (toast.type) {\r\n    case 'success':\r\n      color = 'success';\r\n      break;\r\n    case 'error':\r\n      color = 'danger';\r\n      break;\r\n    case 'danger':\r\n      color = 'danger';\r\n      break;\r\n    default:\r\n      color = 'warning';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='toastify-header'>\r\n        <div className='title-wrapper'>\r\n          <Avatar\r\n            size='sm'\r\n            color={color}\r\n            icon={\r\n              toast.type === 'success' ? (\r\n                <Check size={12} />\r\n              ) : (\r\n                <AlertCircle size={12} />\r\n              )\r\n            }\r\n          />\r\n          <div style={{ maxHeight: '350px', overflow: 'auto' }}>\r\n            <h6 className='toast-title font-weight-bold text-center'>\r\n              {toast.text}\r\n            </h6>\r\n            {showValueToDelete && toast.value && showValueToDelete(toast.value)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ToastContent;\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types';\r\nimport {\r\n  Grid,\r\n  CheckSquare,\r\n  MessageSquare,\r\n  Mail,\r\n  Calendar,\r\n} from 'react-feather';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from 'reactstrap';\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const {\r\n    breadCrumbTitle,\r\n    breadCrumbParent,\r\n    breadCrumbParent2,\r\n    breadCrumbParent3,\r\n    breadCrumbActive,\r\n  } = props;\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? (\r\n              <h2 className='content-header-title float-left mb-0'>\r\n                {breadCrumbTitle}\r\n              </h2>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Acceuil</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent && (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent}\r\n                  </BreadcrumbItem>\r\n                )}\r\n                {breadCrumbParent2 && (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                )}\r\n                {breadCrumbParent3 && (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle\r\n              color='primary'\r\n              size='sm'\r\n              className='btn-icon btn-round dropdown-toggle'\r\n            >\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nexport default BreadCrumbs;\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired,\r\n};\r\n"],"sourceRoot":""}
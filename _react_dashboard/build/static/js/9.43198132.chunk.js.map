{"version":3,"sources":["views/components/blog/blogEdit/BlogEditForm.jsx","views/components/blog/blogEdit/BlogEdit.jsx","views/components/users/ToastContent.jsx","@core/components/breadcrumbs/index.js"],"names":["BlogEditForm","props","slug","title","status","setSlug","content","history","dispatch","resetImg","onSubmit","setTitle","setStatus","setContent","formErrors","previewImg","categories","selectedPost","onFileChange","isSubmitting","postCategories","handleFormReset","setPostToManage","setBlogCategories","useEffect","message","window","scrollTo","top","left","behavior","Card","className","CardBody","Alert","color","size","FormText","Form","Row","Col","md","FormGroup","Label","for","Input","required","id","value","onChange","e","target","isClearable","theme","selectThemeColors","isMulti","name","options","classNamePrefix","data","type","sm","editorState","toolbar","fontFamily","colorPicker","colors","onEditorStateChange","handlePastedText","Media","src","alt","maxheight","width","style","objectFit","body","overflow","CustomInput","placeholder","accept","invalidImg","Button","Ripple","disabled","Spinner","onClick","goBack","outline","BlogEdit","useDispatch","useHistory","store","useSelector","state","blog","loginUser","auth","userData","postErrors","errors","addPost","EditorState","createEmpty","categoriesState","statusState","htmlText","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","toEditorState","map","category","find","c","useState","featuredImg","setFeaturedImg","image","setPreviewImg","setResetImg","setIsSubmitting","setFormErrors","removeSelectedPost","msg","setTimeout","preventDefault","length","getCurrentContent","hasText","draftToHtml","convertToRaw","text","getPlainText","values","capitalize","slugify","author","authorUsername","username","postId","processData","updatePost","postData","serialize","append","then","res","successSubmit","toastValue","Date","now","toast","ToastContent","transition","Slide","hideProgressBar","autoClose","pauseOnHover","breadCrumbTitle","breadCrumbParent","breadCrumbActive","img","files","error","imageValidation","checkImg","Image","URL","createObjectURL","onload","this","height","showValueToDelete","icon","maxHeight","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","tag","to","active"],"mappings":"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","file":"static/js/9.43198132.chunk.js","sourcesContent":["// ** React\r\nimport { useEffect } from 'react';\r\n// ** Third Party Components\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport Select from 'react-select';\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils';\r\n// ** Styling Components\r\nimport { AlertCircle } from 'react-feather';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Media,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n  Button,\r\n  Spinner,\r\n  FormText,\r\n  CardBody,\r\n  FormGroup,\r\n  CustomInput,\r\n} from 'reactstrap';\r\nimport '@styles/react/libs/editor/editor.scss';\r\nimport '@styles/base/plugins/forms/form-quill-editor.scss';\r\nimport '@styles/react/libs/react-select/_react-select.scss';\r\nimport '@styles/base/pages/page-blog.scss';\r\n\r\nconst BlogEditForm = (props) => {\r\n  const {\r\n    slug,\r\n    title,\r\n    status,\r\n    setSlug,\r\n    content,\r\n    history,\r\n    dispatch,\r\n    resetImg,\r\n    onSubmit,\r\n    setTitle,\r\n    setStatus,\r\n    setContent,\r\n    formErrors,\r\n    previewImg,\r\n    categories,\r\n    selectedPost,\r\n    onFileChange,\r\n    isSubmitting,\r\n    postCategories,\r\n    handleFormReset,\r\n    setPostToManage,\r\n    setBlogCategories,\r\n  } = props;\r\n  // Scroll on top to Error message\r\n  useEffect(() => {\r\n    if (formErrors?.message) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [formErrors]);\r\n\r\n  // Editor Font Family Options\r\n  const editorFonfamily = [\r\n    'Poppins',\r\n    'Montserrat',\r\n    'Helvetica',\r\n    'Arial',\r\n    'Georgia',\r\n    'Impact',\r\n    'Tahoma',\r\n    'Times New Roman',\r\n    'Verdana',\r\n  ];\r\n\r\n  const editorColorPicker = [\r\n    'rgb(45,40,94)',\r\n    'rgb(0,0,0)',\r\n    'rgb(34,34,34)',\r\n    'rgb(204,204,204)',\r\n    'rgb(97,189,109)',\r\n    'rgb(184,49,47)',\r\n    'rgb(44,130,201)',\r\n    'rgb(26,188,156)',\r\n    'rgb(84,172,210)',\r\n    'rgb(147,101,184)',\r\n    'rgb(71,85,119)',\r\n    'rgb(65,168,95)',\r\n    'rgb(0,168,133)',\r\n    'rgb(61,142,185)',\r\n    'rgb(41,105,176)',\r\n    'rgb(85,57,130)',\r\n    'rgb(40,50,78)',\r\n    'rgb(247,218,100)',\r\n    'rgb(251,160,38)',\r\n    'rgb(235,107,86)',\r\n    'rgb(226,80,65)',\r\n    'rgb(163,143,132)',\r\n    'rgb(239,239,239)',\r\n    'rgb(255,255,255)',\r\n    'rgb(250,197,28)',\r\n    'rgb(243,121,52)',\r\n    'rgb(209,72,65)',\r\n    'rgb(124,112,107)',\r\n    'rgb(209,213,216)',\r\n  ];\r\n\r\n  return (\r\n    <Card className='container'>\r\n      <CardBody>\r\n        {/* Error Message & Required Field Text */}\r\n        <div>\r\n          {formErrors?.message ? (\r\n            <Alert color='danger'>\r\n              <div className='alert-body'>\r\n                <AlertCircle size={15} />\r\n                <span className='ml-1'>{formErrors.message}</span>\r\n              </div>\r\n            </Alert>\r\n          ) : (\r\n            <FormText className='d-flex mb-1' color='muted'>\r\n              <div className='ml-auto'>\r\n                [<span className='text-danger'> * </span>] Champs obligatoires\r\n              </div>\r\n            </FormText>\r\n          )}\r\n        </div>\r\n        <Form className='mt-2' onSubmit={onSubmit}>\r\n          <Row>\r\n            {/* Title */}\r\n            <Col md='6'>\r\n              <FormGroup className='mb-2'>\r\n                <Label for='blog-edit-title'>\r\n                  Title <span className='text-danger'> * </span>\r\n                </Label>\r\n                <Input\r\n                  // disabled={notEditable}\r\n                  required\r\n                  id='blog-edit-title'\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            {/* Categories */}\r\n            <Col md='6'>\r\n              <FormGroup className='mb-2'>\r\n                <Label for='blog-edit-category'>\r\n                  Catégories <span className='text-danger'> * </span>\r\n                </Label>\r\n                <Select\r\n                  required\r\n                  // isDisabled={notEditable}\r\n                  id='blog-edit-category'\r\n                  isClearable={false}\r\n                  theme={selectThemeColors}\r\n                  value={categories}\r\n                  isMulti\r\n                  name='colors'\r\n                  options={postCategories}\r\n                  className='react-select'\r\n                  classNamePrefix='select'\r\n                  onChange={(data) => setBlogCategories(data)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            {/* Slug */}\r\n            <Col md='6'>\r\n              <FormGroup className='mb-2'>\r\n                <Label for='blog-edit-slug'>Mots Clés</Label>\r\n                <Input\r\n                  // disabled={notEditable}\r\n                  id='blog-edit-slug'\r\n                  value={slug}\r\n                  onChange={(e) => setSlug(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            {/* Status */}\r\n            <Col md='6'>\r\n              <FormGroup className='mb-2'>\r\n                <Label for='blog-edit-status'>\r\n                  Statut <span className='text-danger'> * </span>\r\n                </Label>\r\n                <Input\r\n                  // disabled={notEditable}\r\n                  required\r\n                  type='select'\r\n                  id='blog-edit-status'\r\n                  value={status}\r\n                  onChange={(e) => setStatus(e.target.value)}\r\n                >\r\n                  <option value='true'>Publié</option>\r\n                  <option value='false'>Brouillon</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            {/* Editor */}\r\n            <Col sm='12'>\r\n              <FormGroup className='mb-2'>\r\n                <Label>\r\n                  Texte <span className='text-danger'> * </span>\r\n                </Label>\r\n                <Editor\r\n                  // readOnly={notEditable}\r\n                  editorState={content}\r\n                  toolbar={{\r\n                    fontFamily: { options: editorFonfamily },\r\n                    colorPicker: { colors: editorColorPicker },\r\n                  }}\r\n                  onEditorStateChange={(data) => setContent(data)}\r\n                  handlePastedText={() => false}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            {/* Image */}\r\n            <Col className='mb-2' sm='12'>\r\n              <div className='border rounded p-2'>\r\n                <h5 className='mb-1'>\r\n                  Image <span className='text-danger'> * </span>\r\n                </h5>\r\n                <Media className='flex-column flex-md-row'>\r\n                  {previewImg && (\r\n                    <img\r\n                      className='rounded border img-fluid mr-2 mb-1 mb-md-0'\r\n                      src={previewImg}\r\n                      alt='featured img'\r\n                      maxheight='110'\r\n                      width='250'\r\n                      style={{ objectFit: 'contain' }}\r\n                    />\r\n                  )}\r\n\r\n                  <Media body>\r\n                    <div>\r\n                      <small className='text-muted'>\r\n                        Résolution minimale de l'image 500x300, taille maximale\r\n                        de l'image 1 mb.\r\n                      </small>\r\n                    </div>\r\n\r\n                    <div\r\n                      className='d-inline-block mt-1'\r\n                      style={{ overflow: 'hidden' }}\r\n                    >\r\n                      <FormGroup className='mb-0'>\r\n                        <CustomInput\r\n                          // disabled={notEditable}\r\n                          type='file'\r\n                          id='featured-img'\r\n                          key={resetImg}\r\n                          onChange={onFileChange}\r\n                          placeholder='Choisir une image'\r\n                          accept='.jpg, .png, .jpeg, .webp'\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    {formErrors?.invalidImg && (\r\n                      <div>\r\n                        <small className='text-danger'>\r\n                          {formErrors.invalidImg}\r\n                        </small>\r\n                      </div>\r\n                    )}\r\n                  </Media>\r\n                </Media>\r\n              </div>\r\n            </Col>\r\n            {/* Buttons */}\r\n            <Col className='mt-50'>\r\n              {/* Save Changes Button */}\r\n              <Button.Ripple\r\n                className='mb-1 mr-1'\r\n                type='submit'\r\n                color='primary'\r\n                disabled={isSubmitting || !!formErrors}\r\n              >\r\n                {isSubmitting ? (\r\n                  <>\r\n                    <Spinner size='sm' color='white' />\r\n                    <span className='ml-50'>Sauvegarde...</span>\r\n                  </>\r\n                ) : (\r\n                  'Sauvegarder'\r\n                )}\r\n              </Button.Ripple>\r\n              {/* Reset Changes Button */}\r\n              {selectedPost && (\r\n                <Button.Ripple\r\n                  className='mb-1 mr-1'\r\n                  type='button'\r\n                  color='warning'\r\n                  disabled={isSubmitting || !!formErrors}\r\n                  onClick={handleFormReset}\r\n                >\r\n                  Réinitialiser\r\n                </Button.Ripple>\r\n              )}\r\n              {/* Delete Button */}\r\n              {selectedPost && (\r\n                <Button.Ripple\r\n                  className='mb-1 mr-1'\r\n                  type='button'\r\n                  color='danger'\r\n                  disabled={isSubmitting || !!formErrors}\r\n                  onClick={() => {\r\n                    dispatch(setPostToManage(selectedPost));\r\n                    history.goBack();\r\n                  }}\r\n                >\r\n                  Supprimer\r\n                </Button.Ripple>\r\n              )}\r\n              {/* Go Back Button */}\r\n              <Button.Ripple\r\n                color='secondary'\r\n                className='mb-1 mr-1'\r\n                type='button'\r\n                outline\r\n                disabled={isSubmitting || !!formErrors}\r\n                onClick={() => history.goBack()}\r\n              >\r\n                Retour\r\n              </Button.Ripple>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BlogEditForm;\r\n","// ** React\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n// ** Redux Store and Actions\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  addPost,\r\n  updatePost,\r\n  setPostToManage,\r\n  removeSelectedPost,\r\n} from '@store/actions/blog';\r\n// ** Third Party Components\r\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport { toast, Slide } from 'react-toastify';\r\n// ** Utils\r\nimport { imageValidation, slugify, capitalize } from '@utils';\r\nimport { serialize } from 'object-to-formdata';\r\n// ** Custom Components\r\nimport BlogEditForm from './BlogEditForm';\r\nimport ToastContent from '../../users/ToastContent';\r\nimport Breadcrumbs from '@components/breadcrumbs';\r\n\r\nconst BlogEdit = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const store = useSelector((state) => state.blog);\r\n  const { selectedPost, postCategories } = store;\r\n  const loginUser = useSelector((state) => state.auth.userData);\r\n  const postErrors = useSelector((state) => state.errors.addPost);\r\n  // ** Convert text to Editor State Function\r\n  const toEditorState = (htmlText) => {\r\n    const contentBlock = htmlToDraft(htmlText);\r\n    const contentState = ContentState.createFromBlockArray(\r\n      contentBlock.contentBlocks\r\n    );\r\n    return EditorState.createWithContent(contentState);\r\n  };\r\n\r\n  let editorState = EditorState.createEmpty();\r\n  let categoriesState = [];\r\n  let statusState = true;\r\n  if (selectedPost) {\r\n    statusState = selectedPost?.status;\r\n    editorState = toEditorState(selectedPost.htmlText);\r\n    categoriesState = selectedPost.categories.map((category) => {\r\n      // eslint-disable-next-line\r\n      return postCategories.find((c) => category == c.value);\r\n    });\r\n  }\r\n  // ** State\r\n  const [content, setContent] = useState(editorState),\r\n    [categories, setBlogCategories] = useState(categoriesState),\r\n    [title, setTitle] = useState(selectedPost?.title || ''),\r\n    [slug, setSlug] = useState(selectedPost?.slug || ''),\r\n    [status, setStatus] = useState(statusState),\r\n    [featuredImg, setFeaturedImg] = useState(''),\r\n    [previewImg, setPreviewImg] = useState(selectedPost?.image || ''),\r\n    [resetImg, setResetImg] = useState(1),\r\n    [isSubmitting, setIsSubmitting] = useState(false),\r\n    [formErrors, setFormErrors] = useState(null);\r\n\r\n  // ** Remove Selected Post On Unmount\r\n  useEffect(() => {\r\n    return () => dispatch(removeSelectedPost());\r\n  }, []);\r\n  // ** Set server Errors response\r\n  useEffect(() => {\r\n    if (postErrors) {\r\n      setFormErrors({ message: postErrors[0].msg });\r\n      setTimeout(() => {\r\n        setFormErrors(null);\r\n      }, 3000);\r\n      dispatch({\r\n        type: 'CLEAR_ERRORS',\r\n        data: 'addPost',\r\n      });\r\n    }\r\n  }, [postErrors]);\r\n  // ** File Upload Handler\r\n  const onFileChange = (e) => {\r\n    const img = e.target.files[0];\r\n    if (!img) {\r\n      setPreviewImg('');\r\n      return;\r\n    }\r\n    const error = imageValidation(img);\r\n    if (error) {\r\n      setFormErrors({ invalidImg: error });\r\n      setResetImg(Date.now());\r\n      setPreviewImg(selectedPost?.image || '');\r\n      setTimeout(() => {\r\n        setFormErrors(null);\r\n      }, 3000);\r\n      return;\r\n    }\r\n    const checkImg = new Image();\r\n    checkImg.src = URL.createObjectURL(img);\r\n    checkImg.onload = async function () {\r\n      if (this.width < 500 || this.height < 300) {\r\n        setFormErrors({ invalidImg: \"Largeur ou hauteur d'image invalide\" });\r\n        setResetImg(Date.now());\r\n        setPreviewImg(selectedPost?.image || '');\r\n        setTimeout(() => {\r\n          setFormErrors(null);\r\n        }, 3000);\r\n      } else {\r\n        setFeaturedImg(img);\r\n        setPreviewImg(URL.createObjectURL(img));\r\n      }\r\n    };\r\n  };\r\n  // ** Form Edit and Reset Handler\r\n  const handleFormReset = () => {\r\n    setContent(editorState);\r\n    setBlogCategories(categoriesState);\r\n    setTitle(selectedPost?.title || '');\r\n    setSlug(selectedPost?.slug || '');\r\n    setStatus(selectedPost?.status);\r\n    setFeaturedImg('');\r\n    setPreviewImg(selectedPost?.image || '');\r\n    setResetImg(Date.now());\r\n  };\r\n  // ** Form Edit and Reset Handler\r\n  const formValidation = () => {\r\n    if (\r\n      !title ||\r\n      !categories.length ||\r\n      (!featuredImg && !selectedPost) ||\r\n      !content.getCurrentContent().hasText()\r\n    ) {\r\n      setIsSubmitting(false);\r\n      setFormErrors({\r\n        message: 'Remplissez tous les champs obligatoires marqués avec (*)!',\r\n      });\r\n      setTimeout(() => {\r\n        setFormErrors(null);\r\n      }, 3500);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  // ** Function to handle form submit\r\n  const onSubmit = async (e) => {\r\n    setIsSubmitting(true);\r\n    e.preventDefault();\r\n    if (!formValidation()) return;\r\n    // Transform Editor text to Html in String\r\n    const htmlText = draftToHtml(convertToRaw(content.getCurrentContent()));\r\n    const text = content.getCurrentContent().getPlainText();\r\n    const values = { title: capitalize(title), status, htmlText, text };\r\n    values.slug = slug ? slugify(slug) : slugify(title);\r\n    values.author = loginUser.id;\r\n    values.authorUsername = loginUser.username;\r\n    values.categories = categories.map((category) => category.value);\r\n    let postId = null;\r\n    let processData = addPost;\r\n    if (selectedPost) {\r\n      postId = selectedPost.id;\r\n      processData = updatePost;\r\n    }\r\n    // Transform values Form Data\r\n    const postData = serialize(values);\r\n    postData.append('img', featuredImg || selectedPost.image);\r\n    // for (const value of postData.values()) {\r\n    //   console.log(value);\r\n    // }\r\n    // return;\r\n    const successSubmit = await dispatch(processData(postData, postId)).then(\r\n      (res) => {\r\n        setIsSubmitting(false);\r\n        return res;\r\n      }\r\n    );\r\n\r\n    let toastValue = {\r\n      type: 'error',\r\n      text: selectedPost\r\n        ? 'La mise à jour du article a échoué'\r\n        : \"La création d'un nouveau arcticle a échoué\",\r\n    };\r\n\r\n    if (successSubmit) {\r\n      toastValue = {\r\n        type: 'success',\r\n        text: selectedPost\r\n          ? 'Article modifié avec succès'\r\n          : 'Nouveau article ajouté avec succès',\r\n      };\r\n\r\n      if (!selectedPost) {\r\n        setTitle('');\r\n        setBlogCategories([]);\r\n        setSlug('');\r\n        setStatus('');\r\n        setPreviewImg('');\r\n        setFeaturedImg('');\r\n        setResetImg(Date.now());\r\n        setContent(EditorState.createEmpty());\r\n      }\r\n    }\r\n    toast[toastValue.type](ToastContent(toastValue), {\r\n      transition: Slide,\r\n      hideProgressBar: false,\r\n      autoClose: 3000,\r\n      pauseOnHover: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='blog-edit-wrapper'>\r\n      <Breadcrumbs\r\n        breadCrumbTitle=\"Edition de l'article\"\r\n        breadCrumbParent='Blog'\r\n        breadCrumbActive='Editer'\r\n      />\r\n      <BlogEditForm\r\n        slug={slug}\r\n        title={title}\r\n        status={status}\r\n        setSlug={setSlug}\r\n        content={content}\r\n        history={history}\r\n        dispatch={dispatch}\r\n        resetImg={resetImg}\r\n        onSubmit={onSubmit}\r\n        setTitle={setTitle}\r\n        setStatus={setStatus}\r\n        setContent={setContent}\r\n        formErrors={formErrors}\r\n        previewImg={previewImg}\r\n        categories={categories}\r\n        selectedPost={selectedPost}\r\n        onFileChange={onFileChange}\r\n        isSubmitting={isSubmitting}\r\n        postCategories={postCategories}\r\n        handleFormReset={handleFormReset}\r\n        setPostToManage={setPostToManage}\r\n        setBlogCategories={setBlogCategories}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogEdit;\r\n","// ** React\r\nimport { Fragment } from 'react';\r\n// ** Third Party Components\r\nimport Avatar from '@components/avatar';\r\n// ** Styling Components\r\nimport { Check, AlertCircle } from 'react-feather';\r\n\r\n// ** Toast Message Handler\r\nconst ToastContent = (toast, showValueToDelete) => {\r\n  let color;\r\n  switch (toast.type) {\r\n    case 'success':\r\n      color = 'success';\r\n      break;\r\n    case 'error':\r\n      color = 'danger';\r\n      break;\r\n    case 'danger':\r\n      color = 'danger';\r\n      break;\r\n    default:\r\n      color = 'warning';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='toastify-header'>\r\n        <div className='title-wrapper'>\r\n          <Avatar\r\n            size='sm'\r\n            color={color}\r\n            icon={\r\n              toast.type === 'success' ? (\r\n                <Check size={12} />\r\n              ) : (\r\n                <AlertCircle size={12} />\r\n              )\r\n            }\r\n          />\r\n          <div style={{ maxHeight: '350px', overflow: 'auto' }}>\r\n            <h6 className='toast-title font-weight-bold text-center'>\r\n              {toast.text}\r\n            </h6>\r\n            {showValueToDelete && toast.value && showValueToDelete(toast.value)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ToastContent;\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types';\r\nimport {\r\n  Grid,\r\n  CheckSquare,\r\n  MessageSquare,\r\n  Mail,\r\n  Calendar,\r\n} from 'react-feather';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from 'reactstrap';\r\n\r\nconst BreadCrumbs = (props) => {\r\n  // ** Props\r\n  const {\r\n    breadCrumbTitle,\r\n    breadCrumbParent,\r\n    breadCrumbParent2,\r\n    breadCrumbParent3,\r\n    breadCrumbActive,\r\n  } = props;\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? (\r\n              <h2 className='content-header-title float-left mb-0'>\r\n                {breadCrumbTitle}\r\n              </h2>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Acceuil</Link>\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent && (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent}\r\n                  </BreadcrumbItem>\r\n                )}\r\n                {breadCrumbParent2 && (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                )}\r\n                {breadCrumbParent3 && (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle\r\n              color='primary'\r\n              size='sm'\r\n              className='btn-icon btn-round dropdown-toggle'\r\n            >\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nexport default BreadCrumbs;\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired,\r\n};\r\n"],"sourceRoot":""}